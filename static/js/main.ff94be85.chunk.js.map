{"version":3,"sources":["components/services/AuthenticationService.js","components/services/AuthenticatedRoute.jsx","components/services/LoginService.js","components/views/FooterComponentList.jsx","components/views/HeaderComponent.jsx","components/views/LoginComponent.jsx","components/views/FooterComponent.jsx","components/services/OptimizerService.js","components/views/WelcomeComponent.jsx","components/views/ErrorComponent.jsx","components/views/LogoutComponent.jsx","components/services/EmployeeDataService.js","components/views/ListEmployeeComponent.jsx","components/views/EmployeeComponent.jsx","components/services/JobDataService.js","components/views/ListJobComponent.jsx","components/views/JobComponent.jsx","components/services/ShiftDataService.js","components/views/ListShiftComponent.jsx","components/views/ShiftComponent.jsx","components/services/SkillDataService.js","components/views/ListSkillComponent.jsx","components/views/SkillComponent.jsx","components/services/RoleDataService.js","components/views/ListRoleComponent.jsx","components/views/RoleComponent.jsx","components/services/EmployeeSkillService.js","components/views/ListEmployeeSkillComponent.jsx","components/views/EmployeeSkillComponent.jsx","components/views/OptimizerComponent.jsx","components/views/WorkforceApp.jsx","App.js","serviceWorker.js","index.js"],"names":["username","password","role","sessionStorage","setItem","removeItem","getItem","user","AuthenticatedRoute","AuthenticationService","isUserLoggedIn","this","props","to","Component","SERVICE_API","loginData","axios","post","FooterComponentList","className","HeaderComponent","isAdminLoggedIn","getUserLoggedIn","getLoggedInUserName","href","onClick","logout","LoginComponent","state","email","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","LoginService","getLogin","then","resp","console","log","data","registerSuccessfulLogin","history","push","catch","htmlFor","type","id","onChange","FooterComponent","get","WelcomeComponent","pieoptions","chart","xaxis","categories","pieseries","pieoptions1","pieseries1","series","chartOptions","labels","refreshJobCategoryCount","OptimizerService","getJobCategoryCount","response","match","params","options","width","ErrorComponent","LogoutComponent","delete","todo","put","ListEmployeeComponent","employees","employeesCustom","message","refreshEmployees","deleteEmployeeClicked","updateEmployeeClicked","addEmployeeClicked","EmployeeDataService","retrieveAllEmployees","map","employee","item","employeeId","roleCode","roleName","status","employeeStatus","previousState","deleteEmployee","window","location","reload","columns","selector","sortable","left","button","cell","row","pagination","paginationPerPage","paginationRowsPerPageOptions","highlightOnHover","pointerOnHover","EmployeeComponent","birthPlace","birthDate","address","gender","phoneNumber","joinDate","resignationDate","onSubmit","validate","retrieveEmployee","moment","format","values","errors","length","createEmployee","active","updateEmployee","initialValues","validateOnChange","validateOnBlur","enableReinitialize","component","ListJobComponent","jobs","jobsCustom","refreshJobs","deleteJobClicked","updateJobClicked","addJobClicked","JobDataService","retrieveAllJobs","job","jobCode","jobDescription","shiftCode","activityDate","startTime","endTime","deleteJob","JobComponent","instance","classCount","retrieveJob","createJob","updateJob","ListShiftComponent","shifts","shiftsCustom","refreshShifts","deleteShiftClicked","updateShiftClicked","addShiftClicked","ShiftDataService","retrieveAllShifts","shift","shiftName","deleteShift","ShiftComponent","retrieveShift","createShift","updateShift","ListSkillComponent","skills","skillsCustom","refreshSkills","deleteSkillClicked","updateSkillClicked","addSkillClicked","SkillDataService","retrieveAllSkills","skill","skillCode","skillName","deleteSkill","SkillComponent","retrieveSkill","createSkill","updateSkill","ListRoleComponent","roles","rolesCustom","refreshRoles","deleteRoleClicked","updateRoleClicked","addRoleClicked","RoleDataService","retrieveAllRoles","deleteRole","RoleComponent","retrieveRole","createRole","updateRole","employeeSkills","employeeSkillsCustom","refreshEmployeeSkills","deleteEmployeeSkillClicked","updateEmployeeSkillClicked","addEmployeeSkillClicked","EmployeeSkillService","retrieveAllEmployeeSkills","employeeSkill","deleteEmployeeSkill","EmployeeSkillComponent","retrieveEmployeeSkill","createEmployeeSkill","updateEmployeeSkill","OptimizerComponent","apigroup","apijob","jobCount","optimizerClicked","refreshActiveEmployees","refreshActiveJobs","refreshJobCount","retrieveAllActiveEmployees","getOptimizer","getJobCount","group","title","start_time","end_time","groups","items","defaultTimeStart","add","defaultTimeEnd","bordered","striped","hover","size","key","employeeName","WorkforceApp","basename","path","exact","ListEmployeeSkillComponent","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSAiCe,M,gHAhCaA,EAAUC,EAAUC,GACxCC,eAAeC,QAAQ,oBAAqBJ,GAC5CG,eAAeC,QAAQ,oBAAqBF,K,+BAI5CC,eAAeE,WAAW,uB,uCAK1B,OAAY,OADDF,eAAeG,QAAQ,uB,wCAMlC,IAAIJ,EAAOC,eAAeG,QAAQ,qBAC9BC,EAAOJ,eAAeG,QAAQ,qBAClC,MAAY,QAATJ,GAA2B,OAATK,I,4CAKrB,IAAIA,EAAOJ,eAAeG,QAAQ,qBAClC,OAAY,OAATC,EACQ,GAEAA,M,MCdJC,E,iLARP,OAAGC,EAAsBC,iBACd,kBAAC,IAAUC,KAAKC,OAEhB,kBAAC,IAAD,CAAUC,GAAG,e,GALCC,a,+BCD3BC,EAAW,UADA,uCASF,M,iGALFC,GACL,OAAOC,IAAMC,KAAN,UAAcH,EAAd,UAAmCC,O,MCKnCG,G,wLARP,OACI,4BAAQC,UAAU,eACd,0BAAMA,UAAU,cAAhB,2D,GAJkBN,cCgCnBO,E,iLA5BP,IAAMX,EAAiBD,EAAsBC,iBACvCY,EAAkBb,EAAsBa,kBACxCC,EAAkBd,EAAsBe,sBAE9C,OACI,gCACI,yBAAKJ,UAAU,+CACX,6BAAK,uBAAGK,KAAK,yBAAyBL,UAAU,gBAA3C,yBACL,wBAAIA,UAAU,cACTV,GAAkB,4BAAI,kBAAC,IAAD,CAAMU,UAAU,WAAWP,GAAI,YAAcU,GAA7C,kBACtBD,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,cAA9B,aACvBS,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,mBAA9B,sBACvBS,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,UAA9B,YACvBS,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,SAA9B,cACvBS,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,WAA9B,UACvBS,GAAmB,4BAAI,kBAAC,IAAD,CAAMF,UAAU,WAAWP,GAAG,WAA9B,aACvBH,GAAkB,4BAAI,kBAAC,IAAD,CAAMU,UAAU,WAAWP,GAAG,cAA9B,gBAE3B,wBAAIO,UAAU,mDACRV,GAAkB,4BAAI,kBAAC,IAAD,CAAMU,UAAU,WAAWP,GAAG,UAA9B,UACvBH,GAAkB,4BAAI,kBAAC,IAAD,CAAMU,UAAU,WAAWP,GAAG,UAAUa,QAASjB,EAAsBkB,QAAvE,kB,GAtBjBb,aC6Ffc,E,YAzFX,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTC,MAAO,GACP7B,SAAU,GACVC,KAAK,GACL6B,gBAAgB,EAChBC,oBAAoB,GAExB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVL,E,0EAaNE,GACTzB,KAAK0B,SAAL,eAAgBD,EAAME,OAAOC,KAAMH,EAAME,OAAOE,U,qCAGpC,IAAD,OACXC,EAAaC,SAAS,CAClBZ,MAAMnB,KAAKkB,MAAMC,MACjB7B,SAASU,KAAKkB,MAAM5B,WAEvB0C,KAAK,SAACC,GACHC,QAAQC,IAAI,kBAAoBF,EAAKG,KAAK,IACvCH,EAAKG,KAAK,IACTtC,EAAsBuC,wBAAwBJ,EAAKG,KAAK,GAAI,EAAKlB,MAAM5B,SAAU2C,EAAKG,KAAK,IAC3F,EAAKnC,MAAMqC,QAAQC,KAAnB,kBAAmCN,EAAKG,KAAK,MAErB,oBAArB,EAAKlB,MAAMC,OAAuD,eAAxB,EAAKD,MAAM5B,UACpD4C,QAAQC,IAAI,uBACZrC,EAAsBuC,wBAAwB,EAAKnB,MAAMC,MAAO,EAAKD,MAAM5B,SAAU,OACrF,EAAKW,MAAMqC,QAAQC,KAAnB,kBAAmC,EAAKrB,MAAMC,UAE9Ce,QAAQC,IAAI,gBACZ,EAAKT,SAAS,CAACL,oBAAmB,IAClC,EAAKK,SAAS,CAACN,gBAAe,OAIzCoB,MAAM,WACHN,QAAQC,IAAI,uBACY,oBAArB,EAAKjB,MAAMC,OAAuD,eAAxB,EAAKD,MAAM5B,UACpD4C,QAAQC,IAAI,uBACZrC,EAAsBuC,wBAAwB,EAAKnB,MAAMC,MAAO,EAAKD,MAAM5B,SAAU,OACrF,EAAKW,MAAMqC,QAAQC,KAAnB,kBAAmC,EAAKrB,MAAMC,UAE9Ce,QAAQC,IAAI,gBACZ,EAAKT,SAAS,CAACL,oBAAmB,IAClC,EAAKK,SAAS,CAACN,gBAAe,S,+BAMtC,OACI,oCACA,kBAAC,EAAD,MACA,yBAAKX,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACVT,KAAKkB,MAAME,gBAAkB,yBAAKX,UAAU,uBAAf,uBAC9B,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eAAd,oBACI,yBAAKA,UAAU,cACX,2BAAOgC,QAAQ,OAAf,UACA,2BAAOC,KAAK,OAAOC,GAAG,MAAMlC,UAAU,eAAemB,KAAK,QAAQC,MAAO7B,KAAKkB,MAAMC,MAAOyB,SAAU5C,KAAKsB,gBAE9G,yBAAKb,UAAU,cACX,2BAAOgC,QAAQ,OAAf,aACA,2BAAOC,KAAK,WAAWC,GAAG,MAAMlC,UAAU,eAAemB,KAAK,WAAWC,MAAO7B,KAAKkB,MAAM5B,SAAUsD,SAAU5C,KAAKsB,eACpH,6BACA,4BAAQb,UAAU,kBAAkBM,QAASf,KAAKwB,cAAlD,aAOpB,yBAAKf,UAAU,aAEf,kBAAC,EAAD,Y,GAnFaN,a,iBCKd0C,E,iLARP,OACI,4BAAQpC,UAAU,UACd,0BAAMA,UAAU,cAAhB,2D,GAJcN,a,iBCCxBC,EAAW,UADA,uCAqBF,M,uGAhBP,OAAOE,IAAMwC,IAAN,UAAa1C,EAAb,iB,oCAIP,OAAOE,IAAMwC,IAAN,UAAa1C,EAAb,iB,4CAIP,OAAOE,IAAMwC,IAAN,UAAa1C,EAAb,0B,4CAIP,OAAOE,IAAMwC,IAAN,UAAa1C,EAAb,4B,MCuGA2C,E,YAjHX,WAAY9C,GAAQ,IAAD,8BACf,4CAAMA,KAEDiB,MAAQ,CACT8B,WAAY,CACRC,MAAO,CACHN,GAAI,cAERO,MAAO,CACHC,WAAY,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,YAGtGC,UAAW,CACP,CACIxB,KAAM,YACNQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAE7C,CACER,KAAM,YACNQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAE7C,CACER,KAAM,WACNQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGnDiB,YAAa,CACTJ,MAAO,CACHN,GAAI,aAERO,MAAO,CACHC,WAAY,CAAC,OAAQ,UAAW,WAAY,SAAU,MAAO,OAAQ,WAG7EG,WAAY,CACR,CACI1B,KAAM,YACNQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGvCmB,OAAQ,GACRC,aAAc,CACVC,OAAQ,CAAC,YAAa,UAAW,cAGzC,EAAKC,wBAA0B,EAAKA,wBAAwBnC,KAA7B,gBA7ChB,E,iFAkDfvB,KAAK0D,4B,gDAIkB,IAAD,OACtBC,EAAiBC,sBAChB5B,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAAC6B,OAAOM,EAASzB,W,+BAevC,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACK,8CAAoBpC,KAAKC,MAAM6D,MAAMC,OAAOnC,MAC7C,4EACkD,kBAAC,IAAD,CAAM1B,GAAG,cAAT,UADlD,KAGA,4FACkE,kBAAC,IAAD,CAAMA,GAAG,SAAT,UADlE,MAIJ,yBAAKO,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAEX,kBAAC,IAAD,CACIuD,QAAShE,KAAKkB,MAAM8B,WACpBO,OAAQvD,KAAKkB,MAAMkC,UACnBV,KAAK,OACLuB,MAAM,SAGd,yBAAKxD,UAAU,YACX,kBAAC,IAAD,CACIuD,QAAShE,KAAKkB,MAAMmC,YACpBE,OAAQvD,KAAKkB,MAAMoC,WACnBZ,KAAK,MACLuB,MAAM,WAKtB,6BACA,kBAAC,EAAD,W,GA5Ge9D,aCFhB+D,MAJf,WACI,OAAO,oDCcIC,E,iLAZP,OACI,oCACI,kBAAC,EAAD,MACA,kDACA,yBAAK1D,UAAU,aAAf,6C,GANcN,a,yBCAxBC,EAAW,UADA,sCACA,cAuBF,M,6GApBUwB,GACjB,OAAOtB,IAAMwC,IAAN,UAAa1C,EAAb,Y,mDAGP,OAAOE,IAAMwC,IAAN,UAAa1C,EAAb,mB,qCAEIuC,GACX,OAAOrC,IAAM8D,OAAN,UAAgBhE,EAAhB,YAA+BuC,M,uCAEzBA,GACb,OAAOrC,IAAMwC,IAAN,UAAa1C,EAAb,YAA4BuC,M,qCAExBA,EAAI0B,GACf,OAAO/D,IAAMgE,IAAN,UAAalE,EAAb,YAA4BuC,GAAM0B,K,qCAE9BA,GACX,OAAO/D,IAAMC,KAAN,UAAcH,GAAeiE,O,MCgH7BE,E,YA/HX,WAAYtE,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTsD,UAAW,GACXC,gBAAiB,GACjBC,QAAQ,IAEZ,EAAKC,iBAAmB,EAAKA,iBAAiBpD,KAAtB,gBACxB,EAAKqD,sBAAwB,EAAKA,sBAAsBrD,KAA3B,gBAC7B,EAAKsD,sBAAwB,EAAKA,sBAAsBtD,KAA3B,gBAC7B,EAAKuD,mBAAqB,EAAKA,mBAAmBvD,KAAxB,gBAVX,E,iFAcfvB,KAAK2E,qB,yCAGW,IAAD,OACfI,EAAoBC,qBAAqB,QACpChD,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAAC,GACI,IAAMC,EAAO,CACTxC,GAAIuC,EAASE,WACbA,WAAYF,EAASE,WACrBxD,KAAMsD,EAAStD,KACfT,MAAO+D,EAAS/D,MAChB5B,KAAM2F,EAASG,SAASC,SACxBC,OAAQL,EAASM,gBAErB,EAAK9D,SAAS,SAAA+D,GAAa,MAAK,CAC5BhB,gBAAgB,GAAD,mBAAMgB,EAAchB,iBAApB,CAAqCU,a,4CAOtDxC,EAAIf,GAAO,IAAD,OAC5BmD,EAAoBW,eAAe/C,GAC9BX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,kC,4CAKjB/B,GAClBT,QAAQC,IAAI,WAAaQ,GACzB3C,KAAKC,MAAMqC,QAAQC,KAAnB,oBAAqCI,M,2CAIrC3C,KAAKC,MAAMqC,QAAQC,KAAK,kB,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,cACNmE,SAAU,aACVC,UAAU,GAEd,CACIpE,KAAM,OACNmE,SAAU,OACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,QACNmE,SAAU,QACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,UACNmE,SAAU,OACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,SACNmE,SAAU,SACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAK8D,sBAAsBuB,EAAIzD,MAAtF,UAEjB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAK6D,sBAAsBwB,EAAIzD,MAAxF,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACX,6BACA,+CACA,kBAAC,IAAD,CACIqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAMuD,gBACjB4B,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,sBAAsBM,QAAS,kBAAM,EAAK+D,uBAA5D,qBAGR,kBAAC,EAAD,W,GA1HoB3E,a,wBCsNrBuG,E,YApNX,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5ByC,WAAY,GACZxD,KAAM,GACNvC,SAAU,GACVC,SAAU,GACVqH,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,YAAa,GACb5F,MAAO,GACP6F,SAAU,GACVC,gBAAiB,GACjBzB,eAAgB,IAEpB,EAAK0B,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAnBD,E,iFAsBE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAIdoC,EAAoBqC,iBAAiBpH,KAAKkB,MAAMyB,IAC/CX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5B0D,WAAWvB,EAASzB,KAAKgD,WACzBxD,KAAKiC,EAASzB,KAAKR,KACnBvC,SAASwE,EAASzB,KAAK/C,SACvBC,SAASuE,EAASzB,KAAK9C,SACvBqH,WAAW9C,EAASzB,KAAKuE,WACzBC,UAAUS,IAAOxD,EAASzB,KAAKwE,WAAWU,OAAO,cACjDT,QAAQhD,EAASzB,KAAKyE,QACtBC,OAAOjD,EAASzB,KAAK0E,OACrBC,YAAYlD,EAASzB,KAAK2E,YAC1B5F,MAAM0C,EAASzB,KAAKjB,MACpB6F,SAASK,IAAOxD,EAASzB,KAAK4E,UAAUM,OAAO,cAC/CL,gBAAgBI,IAAOxD,EAASzB,KAAK6E,iBAAiBK,OAAO,cAC7D9B,eAAe3B,EAASzB,KAAKoD,qB,+BAI5B+B,GACL,IAAIC,EAAS,GAcb,OAZID,EAAO3F,KAED2F,EAAO3F,KAAK6F,OAAS,IAC3BD,EAAO5F,KAAO,2DAFd4F,EAAO5F,KAAO,mCAKd2F,EAAOpG,MAEDoG,EAAOpG,MAAMsG,OAAS,KAC5BD,EAAOrG,MAAQ,mEAFfqG,EAAOrG,MAAQ,oCAKZqG,I,+BAGFD,GAAS,IAAD,OAEQ,OAAlBvH,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZ4C,EAAoB2C,eAAe,CAC/BtC,WAAWmC,EAAOnC,WAClBxD,KAAK2F,EAAO3F,KACZvC,SAASkI,EAAOlI,SAChBC,SAASiI,EAAOjI,SAChBqH,WAAWY,EAAOZ,WAClBC,UAAUW,EAAOX,UACjBC,QAAQU,EAAOV,QACfC,OAAOS,EAAOT,OACdC,YAAYQ,EAAOR,YACnB5F,MAAMoG,EAAOpG,MACb6F,SAASO,EAAOP,SAChBC,gBAAgB,GAChBzB,eAAe+B,EAAO/B,eACtBH,SAASkC,EAAOlC,SAChBsC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,kBAEtCL,QAAQC,IAAI,UACZ4C,EAAoB6C,eAAe5H,KAAKkB,MAAMyB,GAAI,CAC9CyC,WAAWmC,EAAOnC,WAClBxD,KAAK2F,EAAO3F,KACZvC,SAASkI,EAAOlI,SAChBC,SAASiI,EAAOjI,SAChBqH,WAAWY,EAAOZ,WAClBC,UAAUW,EAAOX,UACjBC,QAAQU,EAAOV,QACfC,OAAOS,EAAOT,OACdC,YAAYQ,EAAOR,YACnB5F,MAAMoG,EAAOpG,MACb6F,SAASO,EAAOP,SAChBC,gBAAgB,GAChBzB,eAAe+B,EAAO/B,eACtBH,SAASkC,EAAOlC,SAChBsC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,mB,+BAIpC,IAAD,EACyJvC,KAAKkB,MAA9JkE,EADA,EACAA,WAAYxD,EADZ,EACYA,KAAMvC,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,SAAUqH,EADtC,EACsCA,WAAYC,EADlD,EACkDA,UAAWC,EAD7D,EAC6DA,QAASC,EADtE,EACsEA,OAAQC,EAD9E,EAC8EA,YAAa5F,EAD3F,EAC2FA,MAAO6F,EADlG,EACkGA,SAAUC,EAD5G,EAC4GA,gBAAiBzB,EAD7H,EAC6HA,eAAgBH,EAD7I,EAC6IA,SAElJ,OACI,6BACI,kBAAC,EAAD,MACA,kDACA,6BACA,yBAAK5E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,aACX,kBAAC,IAAD,CACIoH,cAAe,CAACzC,aAAYxD,OAAMvC,WAAUC,WAAUqH,aAAYC,YAAWC,UAASC,SAAQC,cAAa5F,QAAO6F,WAAUC,kBAAiBzB,iBAAgBH,YAC7J6B,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,OAAOqG,UAAU,MAAMxH,UAAU,wBACpD,kBAAC,IAAD,CAAcmB,KAAK,WAAWqG,UAAU,MAAMxH,UAAU,wBACxD,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,8BAAUA,UAAU,cAChB,8CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,gBAErD,8BAAUnB,UAAU,cAChB,uCACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,UAErD,8BAAUnB,UAAU,cAChB,2CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAErD,8BAAUnB,UAAU,cAChB,2CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,WAAWd,KAAK,cAEzD,8BAAUnB,UAAU,cAChB,+CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,gBAErD,8BAAUnB,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,yCACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAGzD,yBAAKnB,UAAU,YACX,8BAAUA,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,YAErD,8BAAUnB,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,iBAErD,8BAAUnB,UAAU,cAChB,wCACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,WAErD,8BAAUnB,UAAU,cAChB,oDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAErD,8BAAUnB,UAAU,cAChB,iDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,qBAErD,8BAAUnB,UAAU,cAChB,kDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,oBAErD,8BAAUnB,UAAU,cAChB,0CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,gBAI7D,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,6BACA,kBAAC,EAAD,W,GA/MgBN,aCJ1BC,EAAW,UADA,sCACA,SAoBF,M,wGAjBKwB,GACZ,OAAOtB,IAAMwC,IAAN,UAAa1C,EAAb,Y,gCAEDuC,GACN,OAAOrC,IAAM8D,OAAN,UAAgBhE,EAAhB,YAA+BuC,M,kCAE9BA,GACR,OAAOrC,IAAMwC,IAAN,UAAa1C,EAAb,YAA4BuC,M,gCAE7BA,EAAI0B,GACV,OAAO/D,IAAMgE,IAAN,UAAalE,EAAb,YAA4BuC,GAAM0B,K,gCAEnCA,GACN,OAAO/D,IAAMC,KAAN,UAAcH,GAAeiE,O,MCwH7B6D,E,YApIX,WAAYjI,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTiH,KAAM,GACNC,WAAY,GACZ1D,QAAQ,IAEZ,EAAK2D,YAAc,EAAKA,YAAY9G,KAAjB,gBACnB,EAAK+G,iBAAmB,EAAKA,iBAAiB/G,KAAtB,gBACxB,EAAKgH,iBAAmB,EAAKA,iBAAiBhH,KAAtB,gBACxB,EAAKiH,cAAgB,EAAKA,cAAcjH,KAAnB,gBAVN,E,iFAcfvB,KAAKqI,gB,oCAGM,IAAD,OACVI,EAAeC,gBAAgB,QAC1B1G,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAA0D,GACI,IAAMxD,EAAO,CACTxC,GAAIgG,EAAIhG,GACRiG,QAASD,EAAIC,QACbC,eAAgBF,EAAIE,eACpBC,UAAWH,EAAIG,UACfC,aAAcJ,EAAII,aAClBC,UAAWL,EAAIK,UACfC,QAASN,EAAIM,SAEjB,EAAKvH,SAAS,SAAA+D,GAAa,MAAK,CAC5B2C,WAAW,GAAD,mBAAM3C,EAAc2C,YAApB,CAAgCjD,a,uCAOjDxC,EAAIf,GAAO,IAAD,OACvB6G,EAAeS,UAAUvG,GACpBX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,mC,uCAKtB/B,GACbT,QAAQC,IAAI,WAAaQ,GACzB3C,KAAKC,MAAMqC,QAAQC,KAAnB,eAAgCI,M,sCAIhC3C,KAAKC,MAAMqC,QAAQC,KAAK,a,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,iBACNmE,SAAU,UACVC,UAAU,GAEd,CACIpE,KAAM,sBACNmE,SAAU,iBACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,QACNmE,SAAU,YACVC,UAAU,GAEd,CACIpE,KAAM,UACNmE,SAAU,eACVC,UAAU,GAEd,CACIpE,KAAM,YACNmE,SAAU,YACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,cACNmE,SAAU,UACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAKwH,iBAAiBnC,EAAIzD,MAAjF,WAErB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAKuH,iBAAiBlC,EAAIzD,MAAnF,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACX,6BACA,gDACA,kBAAC,IAAD,CACIqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAMkH,WACjB/B,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,sBAAsBM,QAAS,kBAAM,EAAKyH,kBAA5D,sBAGR,kBAAC,EAAD,W,GA/HerI,aC2KhBgJ,E,YAzKX,WAAYlJ,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5BiG,QAAS,GACTC,eAAgB,GAChBC,UAAW,GACXC,aAAc,GACdK,SAAU,GACVC,WAAY,GACZL,UAAW,GACXC,QAAS,GACT7D,WAAY,IAEhB,EAAK8B,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAfD,E,iFAkBE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAId8F,EAAea,YAAYtJ,KAAKkB,MAAMyB,IACrCX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5BkH,QAAQ/E,EAASzB,KAAKwG,QACtBC,eAAehF,EAASzB,KAAKyG,eAC7BC,UAAUjF,EAASzB,KAAK0G,UACxBC,aAAa1B,IAAOxD,EAASzB,KAAK2G,cAAczB,OAAO,cACvD8B,SAASvF,EAASzB,KAAKgH,SACvBC,WAAWxF,EAASzB,KAAKiH,WACzBL,UAAUnF,EAASzB,KAAK4G,UACxBC,QAAQpF,EAASzB,KAAK6G,QACtB7D,WAAWvB,EAASzB,KAAKgD,iB,+BAIxBmC,GACL,IAAIC,EAAS,GAcb,OAZID,EAAOsB,eAEDtB,EAAOsB,eAAepB,OAAS,IACrCD,EAAOqB,eAAiB,mEAFxBrB,EAAOqB,eAAiB,yCAKxBtB,EAAOqB,QAEDrB,EAAOqB,QAAQnB,OAAS,IAC9BD,EAAOoB,QAAU,6DAFjBpB,EAAOoB,QAAU,oCAKdpB,I,+BAGFD,GAAS,IAAD,OACbrF,QAAQC,IAAI,QACS,OAAlBnC,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZsG,EAAec,UAAU,CACrBX,QAAQrB,EAAOqB,QACfC,eAAetB,EAAOsB,eACtBC,UAAUvB,EAAOuB,UACjBC,aAAaxB,EAAOwB,aACpBK,SAAS7B,EAAO6B,SAChBC,WAAW9B,EAAO8B,WAClBL,UAAUzB,EAAOyB,UACjBC,QAAQ1B,EAAO0B,QACf7D,WAAWmC,EAAOnC,WAClBuC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,aAEtCL,QAAQC,IAAI,UACZsG,EAAee,UAAUxJ,KAAKkB,MAAMyB,GAAI,CACpCiG,QAAQrB,EAAOqB,QACfC,eAAetB,EAAOsB,eACtBC,UAAUvB,EAAOuB,UACjBC,aAAaxB,EAAOwB,aACpBK,SAAS7B,EAAO6B,SAChBC,WAAW9B,EAAO8B,WAClBL,UAAUzB,EAAOyB,UACjBC,QAAQ1B,EAAO0B,QACf7D,WAAWmC,EAAOnC,WAClBuC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,c,+BAIpC,IAAD,EAC0GvC,KAAKkB,MAA/G0H,EADA,EACAA,QAASC,EADT,EACSA,eAAgBC,EADzB,EACyBA,UAAWC,EADpC,EACoCA,aAAcK,EADlD,EACkDA,SAAUC,EAD5D,EAC4DA,WAAYL,EADxE,EACwEA,UAAWC,EADnF,EACmFA,QAAS7D,EAD5F,EAC4FA,WAEjG,OACI,6BACI,kBAAC,EAAD,MACA,mDACA,yBAAK3E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,aACX,kBAAC,IAAD,CACIoH,cAAe,CAACe,UAASC,iBAAgBC,YAAWC,eAAcK,WAAUC,aAAYL,YAAWC,UAAS7D,cAC5G8B,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,iBAAiBqG,UAAU,MAAMxH,UAAU,wBAC9D,kBAAC,IAAD,CAAcmB,KAAK,UAAUqG,UAAU,MAAMxH,UAAU,wBACvD,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,8BAAUA,UAAU,cAChB,iDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,aAErD,8BAAUnB,UAAU,cAChB,sDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,oBAErD,8BAAUnB,UAAU,cAChB,6CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,0CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,mBAGzD,yBAAKnB,UAAU,YACX,8BAAUA,UAAU,cAChB,2CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAErD,8BAAUnB,UAAU,cAChB,+CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,gBAErD,8BAAUnB,UAAU,cAChB,4CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,8CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAI7D,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,6BACA,kBAAC,EAAD,W,GApKWN,aCJrBC,EAAW,UADA,sCACA,WAoBF,M,0GAjBOwB,GACd,OAAOtB,IAAMwC,IAAN,UAAa1C,EAAb,Y,kCAECuC,GACR,OAAOrC,IAAM8D,OAAN,UAAgBhE,EAAhB,YAA+BuC,M,oCAE5BA,GACV,OAAOrC,IAAMwC,IAAN,UAAa1C,EAAb,YAA4BuC,M,kCAE3BA,EAAI0B,GACZ,OAAO/D,IAAMgE,IAAN,UAAalE,EAAb,YAA4BuC,GAAM0B,K,kCAEjCA,GACR,OAAO/D,IAAMC,KAAN,UAAcH,GAAeiE,O,MC2G7BoF,E,YAvHX,WAAYxJ,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTwI,OAAQ,GACRC,aAAc,GACdjF,QAAQ,IAEZ,EAAKkF,cAAgB,EAAKA,cAAcrI,KAAnB,gBACrB,EAAKsI,mBAAqB,EAAKA,mBAAmBtI,KAAxB,gBAC1B,EAAKuI,mBAAqB,EAAKA,mBAAmBvI,KAAxB,gBAC1B,EAAKwI,gBAAkB,EAAKA,gBAAgBxI,KAArB,gBAVR,E,iFAcfvB,KAAK4J,kB,sCAGQ,IAAD,OACZI,EAAiBC,kBAAkB,QAC9BjI,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAAiF,GACI,IAAM/E,EAAO,CACTxC,GAAIuH,EAAMpB,UACVA,UAAWoB,EAAMpB,UACjBqB,UAAWD,EAAMC,UACjBnB,UAAWkB,EAAMlB,UACjBC,QAASiB,EAAMjB,SAEnB,EAAKvH,SAAS,SAAA+D,GAAa,MAAK,CAC5BkE,aAAa,GAAD,mBAAMlE,EAAckE,cAApB,CAAkCxE,a,yCAOnDxC,EAAIf,GAAO,IAAD,OACzBoI,EAAiBI,YAAYzH,GACxBX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,+B,yCAKpB/B,GACfT,QAAQC,IAAI,WAAaQ,GACzB3C,KAAKC,MAAMqC,QAAQC,KAAnB,iBAAkCI,M,wCAIlC3C,KAAKC,MAAMqC,QAAQC,KAAK,e,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,aACNmE,SAAU,YACVC,UAAU,GAEd,CACIpE,KAAM,aACNmE,SAAU,YACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,YACNmE,SAAU,YACVC,UAAU,GAEd,CACIpE,KAAM,cACNmE,SAAU,UACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAK+I,mBAAmB1D,EAAIzD,MAAnF,WAErB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAK8I,mBAAmBzD,EAAIzD,MAArF,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACX,6BACA,4CACA,kBAAC,IAAD,CACIqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAMyI,aACjBtD,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,sBAAsBM,QAAS,kBAAM,EAAKgJ,oBAA5D,kBAGR,kBAAC,EAAD,W,GAlHiB5J,aC+HlBkK,E,YA9HX,WAAYpK,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5BmG,UAAW,GACXqB,UAAW,GACXnB,UAAW,GACXC,QAAS,IAEb,EAAK/B,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAVD,E,iFAaE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAIdqH,EAAiBM,cAActK,KAAKkB,MAAMyB,IACzCX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5BoH,UAAUjF,EAASzB,KAAK0G,UACxBqB,UAAUtG,EAASzB,KAAK+H,UACxBnB,UAAUnF,EAASzB,KAAK4G,UACxBC,QAAQpF,EAASzB,KAAK6G,c,+BAIrB1B,GACL,IAAIC,EAAS,GAcb,OAZID,EAAOuB,UAEDvB,EAAOuB,UAAUrB,OAAS,IAChCD,EAAOsB,UAAY,wDAFnBtB,EAAOsB,UAAY,gCAKnBvB,EAAO4C,UAED5C,EAAO4C,UAAU1C,OAAS,IAChCD,EAAO2C,UAAY,0DAFnB3C,EAAO2C,UAAY,gCAKhB3C,I,+BAGFD,GAAS,IAAD,OACQ,OAAlBvH,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZ6H,EAAiBO,YAAY,CACzBzB,UAAUvB,EAAOuB,UACjBqB,UAAU5C,EAAO4C,UACjBnB,UAAUzB,EAAOyB,UACjBC,QAAQ1B,EAAO0B,QACftB,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,eAEtCL,QAAQC,IAAI,UACZ6H,EAAiBQ,YAAYxK,KAAKkB,MAAMyB,GAAI,CACxCmG,UAAUvB,EAAOuB,UACjBqB,UAAU5C,EAAO4C,UACjBnB,UAAUzB,EAAOyB,UACjBC,QAAQ1B,EAAO0B,QACftB,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,gB,+BAIpC,IAAD,EAC4CvC,KAAKkB,MAAjD4H,EADA,EACAA,UAAWqB,EADX,EACWA,UAAWnB,EADtB,EACsBA,UAAWC,EADjC,EACiCA,QAEtC,OACI,6BACI,kBAAC,EAAD,MACA,+CACA,6BACA,yBAAKxI,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIoH,cAAe,CAACiB,YAAWqB,YAAWnB,YAAWC,WACjD/B,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,YAAYqG,UAAU,MAAMxH,UAAU,wBACzD,kBAAC,IAAD,CAAcmB,KAAK,YAAYqG,UAAU,MAAMxH,UAAU,wBACzD,8BAAUA,UAAU,cAChB,6CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,6CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,4CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,8CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,aAErD,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,kBAAC,EAAD,W,GAzHaN,aCHvBC,EAAW,UADA,sCACA,WAoBF,O,0GAjBOwB,GACd,OAAOtB,IAAMwC,IAAN,UAAa1C,EAAb,Y,kCAECuC,GACR,OAAOrC,IAAM8D,OAAN,UAAgBhE,EAAhB,YAA+BuC,M,oCAE5BA,GACV,OAAOrC,IAAMwC,IAAN,UAAa1C,EAAb,YAA4BuC,M,kCAE3BA,EAAI0B,GACZ,OAAO/D,IAAMgE,IAAN,UAAalE,EAAb,YAA4BuC,GAAM0B,K,kCAEjCA,GACR,OAAO/D,IAAMC,KAAN,UAAcH,GAAeiE,O,MC8F7BoG,G,YA1GX,WAAYxK,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTwJ,OAAQ,GACRC,aAAc,GACdjG,QAAQ,IAEZ,EAAKkG,cAAgB,EAAKA,cAAcrJ,KAAnB,gBACrB,EAAKsJ,mBAAqB,EAAKA,mBAAmBtJ,KAAxB,gBAC1B,EAAKuJ,mBAAqB,EAAKA,mBAAmBvJ,KAAxB,gBAC1B,EAAKwJ,gBAAkB,EAAKA,gBAAgBxJ,KAArB,gBAVR,E,iFAcfvB,KAAK4K,kB,sCAGQ,IAAD,OACZI,GAAiBC,kBAAkB,QAC9BjJ,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAAiG,GACI,IAAM/F,EAAO,CACTxC,GAAIuI,EAAMC,UACVA,UAAWD,EAAMC,UACjBC,UAAWF,EAAME,WAErB,EAAK1J,SAAS,SAAA+D,GAAa,MAAK,CAC5BkF,aAAa,GAAD,mBAAMlF,EAAckF,cAApB,CAAkCxF,a,yCAOnDxC,EAAIf,GAAO,IAAD,OACzBoJ,GAAiBK,YAAY1I,GACxBX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,kC,yCAKpB/B,GACfT,QAAQC,IAAI,WAAaQ,GACzB3C,KAAKC,MAAMqC,QAAQC,KAAnB,iBAAkCI,M,wCAIlC3C,KAAKC,MAAMqC,QAAQC,KAAK,e,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,gBACNmE,SAAU,YACVC,UAAU,GAEd,CACIpE,KAAM,gBACNmE,SAAU,YACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAK+J,mBAAmB1E,EAAIzD,MAAnF,UAEjB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAK8J,mBAAmBzE,EAAIzD,MAArF,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACX,6BACA,+CACA,kBAAC,IAAD,CACIqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAMyJ,aACjBtE,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,sBAAsBM,QAAS,kBAAM,EAAKgK,oBAA5D,qBAGR,kBAAC,EAAD,W,GArGiB5K,aC+GlBmL,G,YA9GX,WAAYrL,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5BwI,UAAW,GACXC,UAAW,IACf,EAAKlE,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAPD,E,iFAUE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAIdqI,GAAiBO,cAAcvL,KAAKkB,MAAMyB,IACzCX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5ByJ,UAAUtH,EAASzB,KAAK+I,UACxBC,UAAUvH,EAASzB,KAAKgJ,gB,+BAIvB7D,GACL,IAAIC,EAAS,GAcb,OAZID,EAAO4D,UAED5D,EAAO4D,UAAU1D,OAAS,IAChCD,EAAO2D,UAAY,4DAFnB3D,EAAO2D,UAAY,mCAKnB5D,EAAO6D,UAED7D,EAAO6D,UAAU3D,OAAS,IAChCD,EAAO4D,UAAY,6DAFnB5D,EAAO4D,UAAY,mCAKhB5D,I,+BAGFD,GAAS,IAAD,OACbrF,QAAQC,IAAI,QACS,OAAlBnC,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZ6I,GAAiBQ,YAAY,CACzBL,UAAU5D,EAAO4D,UACjBC,UAAU7D,EAAO6D,UACjBzD,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,eAEtCL,QAAQC,IAAI,UACZ6I,GAAiBS,YAAYzL,KAAKkB,MAAMyB,GAAI,CACxCwI,UAAU5D,EAAO4D,UACjBC,UAAU7D,EAAO6D,UACjBzD,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,gB,+BAIpC,IAAD,EACwBvC,KAAKkB,MAA7BiK,EADA,EACAA,UAAWC,EADX,EACWA,UAEhB,OACI,6BACI,kBAAC,EAAD,MACA,kDACA,6BACA,yBAAK3K,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIoH,cAAe,CAACsD,YAAWC,aAC3BlE,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,YAAYqG,UAAU,MAAMxH,UAAU,wBACzD,kBAAC,IAAD,CAAcmB,KAAK,YAAYqG,UAAU,MAAMxH,UAAU,wBACzD,8BAAUA,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,8BAAUnB,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,kBAAC,EAAD,W,GAzGaN,aCHvBC,GAAW,UADA,sCACA,UAoBF,O,yGAjBMwB,GACb,OAAOtB,IAAMwC,IAAN,UAAa1C,GAAb,Y,iCAEAuC,GACP,OAAOrC,IAAM8D,OAAN,UAAgBhE,GAAhB,YAA+BuC,M,mCAE7BA,GACT,OAAOrC,IAAMwC,IAAN,UAAa1C,GAAb,YAA4BuC,M,iCAE5BA,EAAI0B,GACX,OAAO/D,IAAMgE,IAAN,UAAalE,GAAb,YAA4BuC,GAAM0B,K,iCAElCA,GACP,OAAO/D,IAAMC,KAAN,UAAcH,IAAeiE,O,MC8F7BqH,G,YA1GX,WAAYzL,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyK,MAAO,GACPC,YAAa,GACblH,QAAQ,IAEZ,EAAKmH,aAAe,EAAKA,aAAatK,KAAlB,gBACpB,EAAKuK,kBAAoB,EAAKA,kBAAkBvK,KAAvB,gBACzB,EAAKwK,kBAAoB,EAAKA,kBAAkBxK,KAAvB,gBACzB,EAAKyK,eAAiB,EAAKA,eAAezK,KAApB,gBAVP,E,iFAcfvB,KAAK6L,iB,qCAGO,IAAD,OACXI,GAAgBC,iBAAiB,QAC5BlK,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAA1F,GACI,IAAM4F,EAAO,CACTxC,GAAIpD,EAAK8F,SACTA,SAAU9F,EAAK8F,SACfC,SAAU/F,EAAK+F,UAEnB,EAAK5D,SAAS,SAAA+D,GAAa,MAAK,CAC5BmG,YAAY,GAAD,mBAAMnG,EAAcmG,aAApB,CAAiCzG,a,wCAOlDxC,EAAIf,GAAO,IAAD,OACxBqK,GAAgBE,WAAWxJ,GACtBX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,kC,wCAKrB/B,GACdT,QAAQC,IAAI,WAAaQ,GACzB3C,KAAKC,MAAMqC,QAAQC,KAAnB,gBAAiCI,M,uCAIjC3C,KAAKC,MAAMqC,QAAQC,KAAK,c,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,eACNmE,SAAU,WACVC,UAAU,GAEd,CACIpE,KAAM,eACNmE,SAAU,WACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAKgL,kBAAkB3F,EAAIzD,MAAlF,UAEjB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAK+K,kBAAkB1F,EAAIzD,MAApF,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACf,6BACA,8CACA,kBAAC,IAAD,CACQqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAM0K,YACjBvF,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,sBAAsBM,QAAS,kBAAM,EAAKiL,mBAA5D,oBAGR,kBAAC,EAAD,W,GArGgB7L,aC+GjBiM,G,YA9GX,WAAYnM,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5B0C,SAAU,GACVC,SAAU,IACd,EAAK4B,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAPD,E,iFAUE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAIdsJ,GAAgBI,aAAarM,KAAKkB,MAAMyB,IACvCX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5B2D,SAASxB,EAASzB,KAAKiD,SACvBC,SAASzB,EAASzB,KAAKkD,e,+BAItBiC,GACL,IAAIC,EAAS,GAcb,OAZID,EAAOlC,SAEDkC,EAAOlC,SAASoC,OAAS,IAC/BD,EAAOnC,SAAW,2DAFlBmC,EAAOnC,SAAW,kCAKlBkC,EAAOjC,SAEDiC,EAAOjC,SAASmC,OAAS,IAC/BD,EAAOlC,SAAW,2DAFlBkC,EAAOlC,SAAW,kCAKfkC,I,+BAGFD,GAAS,IAAD,OACbrF,QAAQC,IAAI,QACS,OAAlBnC,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZ8J,GAAgBK,WAAW,CACvBjH,SAASkC,EAAOlC,SAChBC,SAASiC,EAAOjC,SAChBqC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,cAEtCL,QAAQC,IAAI,UACZ8J,GAAgBM,WAAWvM,KAAKkB,MAAMyB,GAAI,CACtC0C,SAASkC,EAAOlC,SAChBC,SAASiC,EAAOjC,SAChBqC,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,e,+BAIpC,IAAD,EACsBvC,KAAKkB,MAA3BmE,EADA,EACAA,SAAUC,EADV,EACUA,SAEf,OACI,6BACI,kBAAC,EAAD,MACA,iDACA,6BACA,yBAAK7E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIoH,cAAe,CAACxC,WAAUC,YAC1B4B,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,WAAWqG,UAAU,MAAMxH,UAAU,wBACxD,kBAAC,IAAD,CAAcmB,KAAK,WAAWqG,UAAU,MAAMxH,UAAU,wBACxD,8BAAUA,UAAU,cAChB,+CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAErD,8BAAUnB,UAAU,cAChB,+CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,cAErD,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,kBAAC,EAAD,W,GAzGYN,aCHtBC,GAAW,UADA,sCACA,mBAoBF,O,kHAjBewB,GACtB,OAAOtB,IAAMwC,IAAN,UAAa1C,GAAb,Y,0CAESuC,GAChB,OAAOrC,IAAM8D,OAAN,UAAgBhE,GAAhB,YAA+BuC,M,4CAEpBA,GAClB,OAAOrC,IAAMwC,IAAN,UAAa1C,GAAb,YAA4BuC,M,0CAEnBA,EAAI0B,GACpB,OAAO/D,IAAMgE,IAAN,UAAalE,GAAb,YAA4BuC,GAAM0B,K,0CAEzBA,GAChB,OAAO/D,IAAMC,KAAN,UAAcH,IAAeiE,O,MC6F7BE,G,YAzGX,WAAYtE,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTsL,eAAgB,GAChBC,qBAAsB,GACtB/H,QAAQ,IAEZ,EAAKgI,sBAAwB,EAAKA,sBAAsBnL,KAA3B,gBAC7B,EAAKoL,2BAA6B,EAAKA,2BAA2BpL,KAAhC,gBAClC,EAAKqL,2BAA6B,EAAKA,2BAA2BrL,KAAhC,gBAClC,EAAKsL,wBAA0B,EAAKA,wBAAwBtL,KAA7B,gBAVhB,E,iFAcfvB,KAAK0M,0B,8CAGgB,IAAD,OACpBI,GAAqBC,0BAA0B,QAC1C/K,KAAK,SAAA6B,GAAQ,OACVA,EAASzB,KAAK6C,IACV,SAAA+H,GACI,IAAM7H,EAAO,CACTxC,GAAIqK,EAAcrK,GAClBf,KAAMoL,EAAc5H,WACpB8F,MAAO8B,EAAc7B,WAEzB,EAAKzJ,SAAS,SAAA+D,GAAa,MAAK,CAC5BgH,qBAAqB,GAAD,mBAAMhH,EAAcgH,sBAApB,CAA0CtH,a,iDAO3DxC,EAAIf,GAAO,IAAD,OACjCkL,GAAqBG,oBAAoBtK,GACpCX,KACG2D,OAAOC,SAASC,UAEnB7D,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACgD,QAAQ,2C,iDAKZ/B,GACvB3C,KAAKC,MAAMqC,QAAQC,KAAnB,yBAA0CI,M,gDAI1C3C,KAAKC,MAAMqC,QAAQC,KAAK,uB,+BAGlB,IAAD,OACCuD,EAAU,CACZ,CACIlE,KAAM,OACNmE,SAAU,OACVC,UAAU,GAEd,CACIpE,KAAM,WACNmE,SAAU,QACVC,UAAU,EACVC,MAAM,GAEV,CACIrE,KAAM,OACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,sBAAsBM,QAAS,kBAAM,EAAK6L,2BAA2BxG,EAAIzD,MAA3F,UAEjB,CACIf,KAAM,QACNsE,QAAQ,EACRC,KAAM,SAAAC,GAAG,OAAI,4BAAQ3F,UAAU,wBAAwBM,QAAS,kBAAM,EAAK4L,2BAA2BvG,EAAIzD,MAA7F,YAGrB,OACI,6BACI,kBAAC,EAAD,MACC3C,KAAKkB,MAAMwD,SAAW,yBAAKjE,UAAU,uBAAuBT,KAAKkB,MAAMwD,SACxE,yBAAKjE,UAAU,aACX,6BACA,wDACA,kBAAC,IAAD,CACIqF,QAASA,EACT1D,KAAMpC,KAAKkB,MAAMuL,qBACjBpG,YAAU,EACVC,kBAAmB,EACnBC,6BAA8B,CAAC,GAC/BC,kBAAgB,EAChBC,gBAAc,IAElB,yBAAKhG,UAAU,OACX,4BAAQA,UAAU,eAAeM,QAAS,kBAAM,EAAK8L,4BAArD,SAGR,kBAAC,EAAD,W,GApGoB1M,aC+GrB+M,G,YA9GX,WAAYjN,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTyB,GAAI,EAAK1C,MAAM6D,MAAMC,OAAOpB,GAC5ByC,WAAY,GACZ+F,UAAW,IACf,EAAKjE,SAAW,EAAKA,SAAS3F,KAAd,gBAChB,EAAK4F,SAAW,EAAKA,SAAS5F,KAAd,gBAPD,E,iFAUE,IAAD,QAEM,IAAnBvB,KAAKkB,MAAMyB,IAIdmK,GAAqBK,sBAAsBnN,KAAKkB,MAAMyB,IACrDX,KAAK,SAAA6B,GAAQ,OAAI,EAAKnC,SAAS,CAC5B0D,WAAWvB,EAASzB,KAAKgD,WACzB+F,UAAUtH,EAASzB,KAAK+I,gB,+BAIvB5D,GACL,IAAIC,EAAS,GAcb,OAZID,EAAOnC,WAEDmC,EAAOnC,WAAWqC,OAAS,IACjCD,EAAOpC,WAAa,0DAFpBoC,EAAOpC,WAAa,iCAKpBmC,EAAO4D,UAED5D,EAAO4D,UAAU1D,OAAS,IAChCD,EAAO2D,UAAY,4DAFnB3D,EAAO2D,UAAY,mCAKhB3D,I,+BAGFD,GAAS,IAAD,OACbrF,QAAQC,IAAI,QACS,OAAlBnC,KAAKkB,MAAMyB,IACVT,QAAQC,IAAI,UACZ2K,GAAqBM,oBAAoB,CACrChI,WAAWmC,EAAOnC,WAClB+F,UAAU5D,EAAO4D,UACjBxD,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,uBAEtCL,QAAQC,IAAI,UACZ2K,GAAqBO,oBAAoBrN,KAAKkB,MAAMyB,GAAI,CACpDyC,WAAWmC,EAAOnC,WAClB+F,UAAU5D,EAAO4D,UACjBxD,OAAO,MACR3F,KAAK,kBAAM,EAAK/B,MAAMqC,QAAQC,KAAK,wB,+BAIpC,IAAD,EACyBvC,KAAKkB,MAA9BkE,EADA,EACAA,WAAY+F,EADZ,EACYA,UAEjB,OACI,6BACI,kBAAC,EAAD,MACA,sDACA,6BACA,yBAAK1K,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIoH,cAAe,CAACzC,aAAY+F,aAC5BjE,SAAUlH,KAAKkH,SACfY,kBAAkB,EAClBC,gBAAgB,EAChBZ,SAAUnH,KAAKmH,SACfa,oBAAoB,GAGhB,SAAC/H,GAAD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAc2B,KAAK,aAAaqG,UAAU,MAAMxH,UAAU,wBAC1D,kBAAC,IAAD,CAAcmB,KAAK,YAAYqG,UAAU,MAAMxH,UAAU,wBACzD,8BAAUA,UAAU,cAChB,8CACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,gBAErD,8BAAUnB,UAAU,cAChB,gDACA,kBAAC,IAAD,CAAOA,UAAU,eAAeiC,KAAK,OAAOd,KAAK,eAErD,4BAAQnB,UAAU,kBAAkBiC,KAAK,UAAzC,cAMpB,yBAAKjC,UAAU,eAIvB,kBAAC,EAAD,W,GAzGqBN,a,iDCoHtBmN,G,YA9GX,WAAYrN,GAAQ,IAAD,8BACf,4CAAMA,KACDiB,MAAQ,CACTqM,SAAU,GACVC,OAAQ,GACRrF,KAAK,GACLsF,SAAU,IAEd,EAAKC,iBAAmB,EAAKA,iBAAiBnM,KAAtB,gBACxB,EAAKoM,uBAAyB,EAAKA,uBAAuBpM,KAA5B,gBAC9B,EAAKqM,kBAAoB,EAAKA,kBAAkBrM,KAAvB,gBACzB,EAAKsM,gBAAkB,EAAKA,gBAAgBtM,KAArB,gBAXR,E,iFAefvB,KAAK2N,yBACL3N,KAAK4N,oBACL5N,KAAK6N,oB,+CAGiB,IAAD,OACrB9I,EAAoB+I,6BACnB9L,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAAC6L,SAAU1J,EAASzB,W,0CAKzB,IAAD,OAChBuB,EAAiBoK,eAChB/L,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAACyG,KAAKtE,EAASzB,W,wCAKtB,IAAD,OACduB,EAAiBqK,cAChBhM,KACG,SAAA6B,GACI,EAAKnC,SAAS,CAAC+L,SAAS5J,EAASzB,W,yCAKzB,IAAD,OACfpC,KAAKkB,MAAMiH,KAAKlD,IACZ,SAAA0D,GACI,IAAMxD,EAAO,CACTxC,GAAIgG,EAAIhG,GACRsL,MAAOtF,EAAIsF,MACXC,MAAOvF,EAAIuF,MACXC,WAAY9G,IAAOsB,EAAIK,UAAW,oBAClCoF,SAAU/G,IAAOsB,EAAIM,QAAS,qBAElC,EAAKvH,SAAS,SAAA+D,GAAa,MAAK,CAC5B+H,OAAO,GAAD,mBAAM/H,EAAc+H,QAApB,CAA4BrI,SAI9CjD,QAAQC,IAAI,a,+BAIZ,IAAMxB,EAAkBb,EAAsBa,kBAE9C,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKF,UAAU,aACX,oDACA,6BACA,kBAAC,KAAD,CACI4N,OAAQrO,KAAKkB,MAAMqM,SACnBe,MAAOtO,KAAKkB,MAAMsM,OAClBe,iBAAkBlH,MAASmH,KAAK,GAAI,QACpCC,eAAgBpH,MAASmH,IAAI,GAAI,UAErC,6BACC7N,GAAmB,4BAAQF,UAAU,yBAAyBM,QAASf,KAAK0N,kBAAzD,YAGpB,kBAAC,KAAD,CAAOgB,UAAQ,EAACC,SAAO,EAACC,OAAK,EAACC,KAAK,MAC/B,+BACI,4BACI,6CACA,wDAGR,+BAEQ7O,KAAKkB,MAAMuM,SAASxI,IAChB,SAAAwI,GAAQ,OACR,wBAAIqB,IAAKrB,EAASsB,cACd,4BAAKtB,EAASsB,cACd,4BAAKtB,EAASA,gBAOtC,kBAAC,EAAD,W,GAzGiBtN,aC2ClB6O,G,iLA/BP,OACI,yBAAKvO,UAAU,WACX,kBAAC,IAAD,CAAYwO,SAAS,KACjB,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAClH,UAAWhH,IACjC,kBAAC,IAAD,CAAOiO,KAAK,SAASjH,UAAWhH,IAChC,kBAAC,EAAD,CAAoBiO,KAAK,iBAAiBjH,UAAWlF,IACrD,kBAAC,EAAD,CAAoBmM,KAAK,aAAajH,UAAW1D,IACjD,kBAAC,EAAD,CAAoB2K,KAAK,gBAAgBjH,UAAWvB,IACpD,kBAAC,EAAD,CAAoBwI,KAAK,kBAAkBjH,UAAWmH,KACtD,kBAAC,EAAD,CAAoBF,KAAK,qBAAqBjH,UAAWiF,KACzD,kBAAC,EAAD,CAAoBgC,KAAK,QAAQjH,UAAWC,IAC5C,kBAAC,EAAD,CAAoBgH,KAAK,WAAWjH,UAAWkB,IAC/C,kBAAC,EAAD,CAAoB+F,KAAK,SAASjH,UAAWyD,KAC7C,kBAAC,EAAD,CAAoBwD,KAAK,YAAYjH,UAAWmE,KAChD,kBAAC,EAAD,CAAoB8C,KAAK,UAAUjH,UAAWwB,IAC9C,kBAAC,EAAD,CAAoByF,KAAK,aAAajH,UAAWoC,IACjD,kBAAC,EAAD,CAAoB6E,KAAK,UAAUjH,UAAWwC,KAC9C,kBAAC,EAAD,CAAoByE,KAAK,aAAajH,UAAWqD,KACjD,kBAAC,EAAD,CAAoB4D,KAAK,aAAajH,UAAWqF,KACjD,kBAAC,EAAD,CAAoB4B,KAAK,UAAUjH,UAAW9D,IAC9C,kBAAC,IAAD,CAAO+K,KAAK,GAAGjH,UAAW/D,Y,GAxB3B/D,a,cCRZkP,OARf,WACE,OACE,yBAAK5O,UAAU,OACb,kBAAC,GAAD,QCIc6O,QACW,cAA7B3J,OAAOC,SAAS2J,UAEe,UAA7B5J,OAAOC,SAAS2J,UAEhB5J,OAAOC,SAAS2J,SAASzL,MACvB,2DCZN0L,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9N,KAAK,SAAA+N,GACjCA,EAAaC,gB","file":"static/js/main.ff94be85.chunk.js","sourcesContent":["class AuthenticationService {\n    registerSuccessfulLogin(username, password, role) {\n        sessionStorage.setItem('authenticatedUser', username);\n        sessionStorage.setItem('authenticatedRole', role);\n    }\n\n    logout() {\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) return false\n        return true\n    }\n\n    isAdminLoggedIn() {\n        let role = sessionStorage.getItem('authenticatedRole')\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(role === \"KBG\" && user !== null) return true\n        return false\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) {\n            return ''\n        } else {\n            return user\n        }\n    }\n}\n\nexport default new AuthenticationService()","import React, {Component} from 'react';\nimport AuthenticationService from '../services/AuthenticationService.js';\nimport {Route, Redirect} from 'react-router-dom';\n\nclass AuthenticatedRoute extends Component {\n    render() {\n        if(AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props}/>\n        } else {\n            return <Redirect to=\"/login\"/>\n        }\n    }\n}\n\nexport default AuthenticatedRoute","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}`;\n\nclass LoginService {\n    getLogin(loginData) {\n        return axios.post(`${SERVICE_API}/login`, loginData);\n    }\n}\n\nexport default new LoginService();","import React, {Component} from 'react';\n\nclass FooterComponentList extends Component {\n    render() {\n        return(\n            <footer className=\"footer-list\">\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\n            </footer>\n        )\n    }\n}\n\nexport default FooterComponentList","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService.js';\n\nclass HeaderComponent extends Component {\n    render() {\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\n        const getUserLoggedIn = AuthenticationService.getLoggedInUserName();\n\n        return(\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"https://raharja.ac.id/\" className=\"navbar-brand\">Workforce Management</a></div>\n                    <ul className=\"navbar-nav\"> \n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to={\"/welcome/\" + getUserLoggedIn}>Halaman Utama</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employees\">Karyawan</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/employeeSkills\">Keahlian Karyawan</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/roles\">Jabatan</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/jobs\">Pekerjaan</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/shifts\">Shift</Link></li>}\n                        {isAdminLoggedIn && <li><Link className=\"nav-link\" to=\"/skills\">Keahlian</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/optimizer\">Optimisasi</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Masuk</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Keluar</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default HeaderComponent","import React, {Component} from 'react';\nimport AuthenticationService from '../services/AuthenticationService.js';\nimport LoginService from '../services/LoginService.js';\nimport './LoginComponent.css';\nimport FooterComponentList from '../views/FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            role:'',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]:event.target.value})\n    }\n\n    loginClicked() {\n        LoginService.getLogin({\n            email:this.state.email,\n            password:this.state.password\n        })\n        .then((resp) => {\n            console.log(\"Success Login: \" + resp.data[1])\n            if(resp.data[0]) {\n                AuthenticationService.registerSuccessfulLogin(resp.data[1], this.state.password, resp.data[2]);\n                this.props.history.push(`welcome/${resp.data[1]}`)\n            } else {\n                if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\n                    console.log(\"Success Login Admin\")\n                    AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\n                    this.props.history.push(`welcome/${this.state.email}`)\n                } else {\n                    console.log(\"Failed Login\")\n                    this.setState({showSuccessMessage:false})\n                    this.setState({hasLoginFailed:true})\n                }                \n            }            \n        })\n        .catch(() => {\n            console.log(\"Catch Success Login\")\n            if(this.state.email === \"fitri.andriyani\" && this.state.password === \"keepsecret\") {\n                console.log(\"Success Login Admin\")\n                AuthenticationService.registerSuccessfulLogin(this.state.email, this.state.password, \"KBG\");\n                this.props.history.push(`welcome/${this.state.email}`)\n            } else {\n                console.log(\"Failed Login\")\n                this.setState({showSuccessMessage:false})\n                this.setState({hasLoginFailed:true})\n            }\n        })\n    }\n\n    render() {\n        return(\n            <>\n            <HeaderComponent/>\n            <div className=\"row\">                \n                <div className=\"col-md-4\">\n                </div>\n                <div className=\"col-md-4\">\n                    {this.state.hasLoginFailed && <div className=\"alert alert-primary\">Invalid Credentials</div>}\n                    <div className=\"container-gray\">\n                        <div className=\"col login-sec\">\n                            <h2 className=\"text-center\">Sign In Aplikasi</h2>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"usr\">Email:</label>\n                                    <input type=\"text\" id=\"usr\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"pwd\">Password:</label>\n                                    <input type=\"password\" id=\"pwd\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                    <br/>\n                                    <button className=\"btn btn-primary\" onClick={this.loginClicked}>\n                                        Kirim\n                                    </button>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                </div>\n                <FooterComponentList/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default LoginComponent","import React, {Component} from 'react';\n\nclass FooterComponent extends Component {\n    render() {\n        return(\n            <footer className=\"footer\">\n                <span className=\"text-muted\">All Right Reserved 2019 @Workforce Management Team</span>\n            </footer>\n        )\n    }\n}\n\nexport default FooterComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}`;\n\nclass OptimizerService {\n    getOptimizer() {\n        return axios.get(`${SERVICE_API}/optimizer`);\n    }\n\n    getJobCount() {\n        return axios.get(`${SERVICE_API}/job-count`);\n    }\n\n    getJobCategoryCount() {\n        return axios.get(`${SERVICE_API}/job-category-count`);\n    }\n\n    getJobEmployeeCount() {\n        return axios.get(`${SERVICE_API}/job-employee-count`);\n    }\n}\n\nexport default new OptimizerService();","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport FooterComponent from './FooterComponent.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\nimport Chart from \"react-apexcharts\";\nimport OptimizerService from '../services/OptimizerService.js';\n\nclass WelcomeComponent extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            pieoptions: {\n                chart: {\n                    id: \"basic-line\"\n                },\n                xaxis: {\n                    categories: [\"1 Nov\", \"2 Nov\", \"3 Nov\", \"4 Nov\", \"5 Nov\", \"6 Nov\", \"7 Nov\", \"8 Nov\", \"9 Nov\", \"10 Nov\"]\n                }\n            },\n            pieseries: [\n                {\n                    name: \"FOLLOW UP\",\n                    data: [28, 29, 33, 36, 32, 32, 33, 29, 30, 32]\n                  },\n                  {\n                    name: \"PROMOTION\",\n                    data: [12, 11, 14, 18, 17, 13, 13, 15, 17, 16]\n                  },\n                  {\n                    name: \"STAND BY\",\n                    data: [20, 19, 22, 24, 20, 23, 25, 27, 25, 22]\n                  }\n            ],\n            pieoptions1: {\n                chart: {\n                    id: \"basic-bar\"\n                },\n                xaxis: {\n                    categories: [\"Dede\", \"Yang Mi\", \"Nurrahma\", \"Yunita\", \"Ayu\", \"Vena\", \"Nasya\"]\n                }\n            },\n            pieseries1: [\n                {\n                    name: \"FOLLOW UP\",\n                    data: [28, 29, 33, 36, 32, 32, 33]\n                }\n            ],\n            series: [],\n            chartOptions: {\n                labels: ['Follow Up', 'Promosi', 'Stand By']\n            }\n        }\n        this.refreshJobCategoryCount = this.refreshJobCategoryCount.bind(this);\n        /*this.refreshJobEmployeeCount = this.refreshJobEmployeeCount.bind(this);*/\n    }\n\n    componentDidMount() {\n        this.refreshJobCategoryCount();\n        /*this.refreshJobEmployeeCount();*/ \n    }\n\n    refreshJobCategoryCount() {\n        OptimizerService.getJobCategoryCount()\n        .then(\n            response => {\n                this.setState({series:response.data})\n            }\n        )\n    }\n\n    /*refreshJobEmployeeCount() {\n        OptimizerService.getJobEmployeeCount()\n        .then(\n            response => {\n                this.setState({pieseries:response.data})\n            }\n        )\n    }*/\n\n    render() {\n        return(\n            <>\n                <HeaderComponent/>\n                <Jumbotron>\n                    {<h2>Selamat Datang {this.props.match.params.name}</h2>}\n                    <p>\n                        Anda dapat mengubah atau menambahkan karyawan <Link to=\"/employees\">disini</Link>.\n                    </p>\n                    <p>\n                        Anda dapat mengubah atau menambahkan pekerjaan untuk karyawan <Link to=\"/jobs\">disini</Link>.\n                    </p>\n                </Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            {/*<Chart options={this.state.chartOptions} series={this.state.series} type=\"pie\" width=\"400\" />*/}\n                            <Chart\n                                options={this.state.pieoptions}\n                                series={this.state.pieseries}\n                                type=\"line\"\n                                width=\"500\"\n                            />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Chart\n                                options={this.state.pieoptions1}\n                                series={this.state.pieseries1}\n                                type=\"bar\"\n                                width=\"500\"\n                            />\n                        </div>\n                    </div>\n                </div>                \n                <hr/>\n                <FooterComponent/>\n            </>\n        )\n    }\n}\n\nexport default WelcomeComponent","import React from 'react';\n\nfunction ErrorComponent() {\n    return <div>An errror occured!</div>\n}\n\nexport default ErrorComponent","import React, {Component} from 'react';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass LogoutComponent extends Component {\n    render() {\n        return(\n            <>\n                <HeaderComponent/>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank Your for Using Our Application\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LogoutComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/employees`;\n\nclass EmployeeDataService {\n    retrieveAllEmployees(name) {\n        return axios.get(`${SERVICE_API}/list`,);\n    }\n    retrieveAllActiveEmployees() {\n        return axios.get(`${SERVICE_API}/list/active`,);\n    }\n    deleteEmployee(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveEmployee(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateEmployee(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createEmployee(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new EmployeeDataService();","import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport EmployeeDataService from '../services/EmployeeDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass ListEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            employees: [],\n            employeesCustom: [],\n            message:\"\"\n        }\n        this.refreshEmployees = this.refreshEmployees.bind(this);\n        this.deleteEmployeeClicked = this.deleteEmployeeClicked.bind(this);\n        this.updateEmployeeClicked = this.updateEmployeeClicked.bind(this);\n        this.addEmployeeClicked = this.addEmployeeClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshEmployees();\n    }\n\n    refreshEmployees() {\n        EmployeeDataService.retrieveAllEmployees(\"name\")\n            .then(response =>\n                response.data.map(\n                    employee => {\n                        const item = {\n                            id: employee.employeeId,\n                            employeeId: employee.employeeId,\n                            name: employee.name,\n                            email: employee.email,\n                            role: employee.roleCode.roleName,\n                            status: employee.employeeStatus,\n                        }\n                        this.setState(previousState => ({\n                            employeesCustom: [...previousState.employeesCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteEmployeeClicked(id, name) {\n        EmployeeDataService.deleteEmployee(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Karyawan berhasil dihapus`})\n                }\n            )\n    }\n\n    updateEmployeeClicked(id) {\n        console.log(\"Update: \" + id)\n        this.props.history.push(`/employee/${id}`)\n    }\n\n    addEmployeeClicked() {\n        this.props.history.push('/employee/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'ID Karyawan',\n                selector: 'employeeId',\n                sortable: true,\n            },\n            {\n                name: 'Nama',\n                selector: 'name',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Email',\n                selector: 'email',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Jabatan',\n                selector: 'role',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Status',\n                selector: 'status',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeClicked(row.id)}>Ubah</button>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <br/>\n                    <h5>Daftar Karyawan</h5>\n                    <DataTable\n                        columns={columns}\n                        data={this.state.employeesCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => this.addEmployeeClicked()}>Tambah Karyawan</button>\n                    </div>\n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListEmployeeComponent","import React, {Component} from 'react';\nimport moment from 'moment';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport EmployeeDataService from '../services/EmployeeDataService.js';\nimport FooterComponent from './FooterComponent.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass EmployeeComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            employeeId: '',\n            name: '',\n            username: '',\n            password: '',\n            birthPlace: '',\n            birthDate: '',\n            address: '',\n            gender: '',\n            phoneNumber: '',\n            email: '',\n            joinDate: '',\n            resignationDate: '',\n            employeeStatus: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        EmployeeDataService.retrieveEmployee(this.state.id)\n        .then(response => this.setState({\n            employeeId:response.data.employeeId,\n            name:response.data.name,\n            username:response.data.username,\n            password:response.data.password,\n            birthPlace:response.data.birthPlace,\n            birthDate:moment(response.data.birthDate).format('YYYY-MM-DD'),\n            address:response.data.address,\n            gender:response.data.gender,\n            phoneNumber:response.data.phoneNumber,\n            email:response.data.email,\n            joinDate:moment(response.data.joinDate).format('YYYY-MM-DD'),\n            resignationDate:moment(response.data.resignationDate).format('YYYY-MM-DD'),\n            employeeStatus:response.data.employeeStatus\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.name) {\n            errors.name = 'Nama karyawan tidak boleh kosong'           \n        } else if(values.name.length < 2) {\n            errors.name = 'Panjang nama karyawan tidak boleh kurang dari dua huruf'\n        }\n\n        if(!values.email) {\n            errors.email = 'Email karyawan tidak boleh kosong'           \n        } else if(values.email.length < 15) {\n            errors.email = 'Panjang email karyawan tidak boleh kurang dari lima belas huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            EmployeeDataService.createEmployee({\n                employeeId:values.employeeId,\n                name:values.name,\n                username:values.username,\n                password:values.password,\n                birthPlace:values.birthPlace,\n                birthDate:values.birthDate,\n                address:values.address,\n                gender:values.gender,\n                phoneNumber:values.phoneNumber,\n                email:values.email,\n                joinDate:values.joinDate,\n                resignationDate:'',\n                employeeStatus:values.employeeStatus,\n                roleCode:values.roleCode,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/employees'))\n        } else {\n            console.log(\"Update\")\n            EmployeeDataService.updateEmployee(this.state.id, {\n                employeeId:values.employeeId,\n                name:values.name,\n                username:values.username,\n                password:values.password,\n                birthPlace:values.birthPlace,\n                birthDate:values.birthDate,\n                address:values.address,\n                gender:values.gender,\n                phoneNumber:values.phoneNumber,\n                email:values.email,\n                joinDate:values.joinDate,\n                resignationDate:'',\n                employeeStatus:values.employeeStatus,\n                roleCode:values.roleCode,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/employees'))\n        }\n    }\n\n    render() {\n        let {employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Karyawan Baru</h4>\n                <hr/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-1\">\n                        </div>\n                        <div className=\"col-md-10\">\n                            <Formik \n                                initialValues={{employeeId, name, username, password, birthPlace, birthDate, address, gender, phoneNumber, email, joinDate, resignationDate, employeeStatus, roleCode}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <fieldset className=\"form-group\">\n                                                        <label>ID Karyawan</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Nama</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"name\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Username</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"username\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Password</label>\n                                                        <Field className=\"form-control\" type=\"password\" name=\"password\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Tempat Lahir</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"birthPlace\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Tanggal Lahir</label>\n                                                        <Field className=\"form-control\" type=\"date\" name=\"birthDate\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Alamat</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"address\"/>\n                                                    </fieldset>\n                                                </div>\n                                                <div className=\"col-md-6\">                                            \n                                                    <fieldset className=\"form-group\">\n                                                        <label>Jenis Kelamin</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"gender\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Nomor Telepon</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"phoneNumber\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Email</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"email\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Tanggal Bergabung</label>\n                                                        <Field className=\"form-control\" type=\"date\" name=\"joinDate\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Tanggal Keluar</label>\n                                                        <Field className=\"form-control\" type=\"date\" name=\"resignationDate\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Status Karyawan</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"employeeStatus\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Jabatan</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\n                                                    </fieldset>\n                                                </div>                                                \n                                            </div>                                            \n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>                                            \n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-1\">\n                        </div>\n                    </div>                    \n                </div>\n                <br/>\n                <FooterComponent/>\n            </div>            \n        )\n    }\n}\n\nexport default EmployeeComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/jobs`;\n\nclass JobDataService {\n    retrieveAllJobs(name) {\n        return axios.get(`${SERVICE_API}/list`);\n    }\n    deleteJob(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveJob(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateJob(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createJob(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new JobDataService();","import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport JobDataService from '../services/JobDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass ListJobComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            jobs: [],\n            jobsCustom: [],\n            message:\"\"\n        }\n        this.refreshJobs = this.refreshJobs.bind(this);\n        this.deleteJobClicked = this.deleteJobClicked.bind(this);\n        this.updateJobClicked = this.updateJobClicked.bind(this);\n        this.addJobClicked = this.addJobClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshJobs();\n    }\n\n    refreshJobs() {\n        JobDataService.retrieveAllJobs(\"name\")\n            .then(response =>\n                response.data.map(\n                    job => {\n                        const item = {\n                            id: job.id,\n                            jobCode: job.jobCode,\n                            jobDescription: job.jobDescription,\n                            shiftCode: job.shiftCode,\n                            activityDate: job.activityDate,                            \n                            startTime: job.startTime,\n                            endTime: job.endTime,\n                        }\n                        this.setState(previousState => ({\n                            jobsCustom: [...previousState.jobsCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteJobClicked(id, name) {\n        JobDataService.deleteJob(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Pekerjaan berhasil dihapus`})\n                }\n            )\n    }\n\n    updateJobClicked(id) {\n        console.log(\"Update: \" + id)\n        this.props.history.push(`/job/${id}`)\n    }\n\n    addJobClicked() {\n        this.props.history.push('/job/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'Kode Pekerjaan',\n                selector: 'jobCode',\n                sortable: true,\n            },\n            {\n                name: 'Deskripsi Pekerjaan',\n                selector: 'jobDescription',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Shift',\n                selector: 'shiftCode',\n                sortable: true,\n            },\n            {\n                name: 'Tanggal',\n                selector: 'activityDate',\n                sortable: true,\n            },\n            {\n                name: 'Jam Mulai',\n                selector: 'startTime',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Jam Selesai',\n                selector: 'endTime',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateJobClicked(row.id)}>Ubah</button></td>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteJobClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <br/>\n                    <h5>Daftar Pekerjaan</h5>                    \n                    <DataTable\n                        columns={columns}\n                        data={this.state.jobsCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => this.addJobClicked()}>Tambah Pekerjaan</button>\n                    </div>                    \n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListJobComponent","import React, {Component} from 'react';\nimport moment from 'moment';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport JobDataService from '../services/JobDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass JobComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            jobCode: '',\n            jobDescription: '',\n            shiftCode: '',\n            activityDate: '',\n            instance: '',\n            classCount: '',\n            startTime: '',\n            endTime: '',\n            employeeId: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        JobDataService.retrieveJob(this.state.id)\n        .then(response => this.setState({\n            jobCode:response.data.jobCode,\n            jobDescription:response.data.jobDescription,\n            shiftCode:response.data.shiftCode,\n            activityDate:moment(response.data.activityDate).format('YYYY-MM-DD'),\n            instance:response.data.instance,\n            classCount:response.data.classCount,\n            startTime:response.data.startTime,\n            endTime:response.data.endTime,\n            employeeId:response.data.employeeId\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.jobDescription) {\n            errors.jobDescription = 'Deskripsi pekerjaan tidak boleh kosong'           \n        } else if(values.jobDescription.length < 7) {\n            errors.jobDescription = 'Panjang deskripsi pekerjaan tidak boleh kurang dari tujuh huruf'\n        }\n\n        if(!values.jobCode) {\n            errors.jobCode = 'Kode pekerjaan tidak boleh kosong'           \n        } else if(values.jobCode.length < 1) {\n            errors.jobCode = 'Panjang kode pekerjaan tidak boleh kurang dari satu huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        console.log(\"Here\")\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            JobDataService.createJob({\n                jobCode:values.jobCode,\n                jobDescription:values.jobDescription,\n                shiftCode:values.shiftCode,\n                activityDate:values.activityDate,\n                instance:values.instance,\n                classCount:values.classCount,\n                startTime:values.startTime,\n                endTime:values.endTime,\n                employeeId:values.employeeId,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/jobs'))\n        } else {\n            console.log(\"Update\")\n            JobDataService.updateJob(this.state.id, {\n                jobCode:values.jobCode,\n                jobDescription:values.jobDescription,\n                shiftCode:values.shiftCode,\n                activityDate:values.activityDate,\n                instance:values.instance,\n                classCount:values.classCount,\n                startTime:values.startTime,\n                endTime:values.endTime,\n                employeeId:values.employeeId,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/jobs'))\n        }\n    }\n\n    render() {\n        let {jobCode, jobDescription, shiftCode, activityDate, instance, classCount, startTime, endTime, employeeId} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Pekerjaan Baru</h4>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-1\">\n                        </div>\n                        <div className=\"col-md-10\">\n                            <Formik \n                                initialValues={{jobCode, jobDescription, shiftCode, activityDate, instance, classCount, startTime, endTime, employeeId}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"jobDescription\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"jobCode\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Kode Pekerjaan</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobCode\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Deskripsi Pekerjaan</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"jobDescription\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Kode Shift</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Tanggal</label>\n                                                        <Field className=\"form-control\" type=\"date\" name=\"activityDate\"/>\n                                                    </fieldset>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Instansi</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"instance\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Jumlah Kelas</label>\n                                                        <Field className=\"form-control\" type=\"text\" name=\"classCount\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Jam Mulai</label>\n                                                        <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\n                                                    </fieldset>\n                                                    <fieldset className=\"form-group\">\n                                                        <label>Jam Selesai</label>\n                                                        <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\n                                                    </fieldset>\n                                                </div>\n                                            </div>                                                                              \n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>\n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-1\">\n                        </div>\n                    </div>                    \n                </div>\n                <br/>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default JobComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/shifts`;\n\nclass ShiftDataService {\n    retrieveAllShifts(name) {\n        return axios.get(`${SERVICE_API}/list`);\n    }\n    deleteShift(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveShift(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateShift(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createShift(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new ShiftDataService();","import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport ShiftDataService from '../services/ShiftDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass ListShiftComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            shifts: [],\n            shiftsCustom: [],\n            message:\"\"\n        }\n        this.refreshShifts = this.refreshShifts.bind(this);\n        this.deleteShiftClicked = this.deleteShiftClicked.bind(this);\n        this.updateShiftClicked = this.updateShiftClicked.bind(this);\n        this.addShiftClicked = this.addShiftClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshShifts();\n    }\n\n    refreshShifts() {\n        ShiftDataService.retrieveAllShifts(\"name\")\n            .then(response =>\n                response.data.map(\n                    shift => {\n                        const item = {\n                            id: shift.shiftCode,\n                            shiftCode: shift.shiftCode,\n                            shiftName: shift.shiftName,\n                            startTime: shift.startTime,\n                            endTime: shift.endTime,\n                        }\n                        this.setState(previousState => ({\n                            shiftsCustom: [...previousState.shiftsCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteShiftClicked(id, name) {\n        ShiftDataService.deleteShift(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Shift berhasil dihapus`})\n                }\n            )\n    }\n\n    updateShiftClicked(id) {\n        console.log(\"Update: \" + id)\n        this.props.history.push(`/shift/${id}`)\n    }\n\n    addShiftClicked() {\n        this.props.history.push('/shift/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'Kode Shift',\n                selector: 'shiftCode',\n                sortable: true,\n            },\n            {\n                name: 'Nama Shift',\n                selector: 'shiftName',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Jam Mulai',\n                selector: 'startTime',\n                sortable: true,\n            },\n            {\n                name: 'Jam Selesai',\n                selector: 'endTime',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <td><button className=\"btn btn-sm btn-info\" onClick={() => this.updateShiftClicked(row.id)}>Ubah</button></td>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteShiftClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <br/>\n                    <h5>Daftar Shift</h5>\n                    <DataTable\n                        columns={columns}\n                        data={this.state.shiftsCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => this.addShiftClicked()}>Tambah Shift</button>\n                    </div>\n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListShiftComponent","import React, {Component} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport ShiftDataService from '../services/ShiftDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass ShiftComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            shiftCode: '',\n            shiftName: '',\n            startTime: '',\n            endTime: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        ShiftDataService.retrieveShift(this.state.id)\n        .then(response => this.setState({\n            shiftCode:response.data.shiftCode,\n            shiftName:response.data.shiftName,\n            startTime:response.data.startTime,\n            endTime:response.data.endTime\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.shiftCode) {\n            errors.shiftCode = 'Kode shift tidak boleh kosong'           \n        } else if(values.shiftCode.length < 2) {\n            errors.shiftCode = 'Panjang kode shift tidak boleh kurang dari dua huruf'\n        }\n\n        if(!values.shiftName) {\n            errors.shiftName = 'Nama shift tidak boleh kosong'           \n        } else if(values.shiftName.length < 4) {\n            errors.shiftName = 'Panjang nama shift tidak boleh kurang dari empat huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            ShiftDataService.createShift({\n                shiftCode:values.shiftCode,\n                shiftName:values.shiftName,\n                startTime:values.startTime,\n                endTime:values.endTime,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/shifts'))\n        } else {\n            console.log(\"Update\")\n            ShiftDataService.updateShift(this.state.id, {\n                shiftCode:values.shiftCode,\n                shiftName:values.shiftName,\n                startTime:values.startTime,\n                endTime:values.endTime,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/shifts'))\n        }\n    }\n\n    render() {\n        let {shiftCode, shiftName, startTime, endTime} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Shift Baru</h4>\n                <hr/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Formik \n                                initialValues={{shiftCode, shiftName, startTime, endTime}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"shiftCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"shiftName\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <fieldset className=\"form-group\">\n                                                <label>Kode Shift</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftCode\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Nama Shift</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"shiftName\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Jam Mulai</label>\n                                                <Field className=\"form-control\" type=\"time\" name=\"startTime\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Jam Selesai</label>\n                                                <Field className=\"form-control\" type=\"time\" name=\"endTime\"/>\n                                            </fieldset>\n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>\n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-3\">\n                        </div>\n                    </div>                    \n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ShiftComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/skills`;\n\nclass SkillDataService {\n    retrieveAllSkills(name) {\n        return axios.get(`${SERVICE_API}/list`);\n    }\n    deleteSkill(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveSkill(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateSkill(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createSkill(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new SkillDataService();","import React, {Component} from 'react';\nimport SkillDataService from '../services/SkillDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\nimport DataTable from 'react-data-table-component';\n\nclass ListSkillComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            skills: [],\n            skillsCustom: [],\n            message:\"\"\n        }\n        this.refreshSkills = this.refreshSkills.bind(this);\n        this.deleteSkillClicked = this.deleteSkillClicked.bind(this);\n        this.updateSkillClicked = this.updateSkillClicked.bind(this);\n        this.addSkillClicked = this.addSkillClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshSkills();\n    }\n\n    refreshSkills() {\n        SkillDataService.retrieveAllSkills(\"name\")\n            .then(response =>\n                response.data.map(\n                    skill => {\n                        const item = {\n                            id: skill.skillCode,\n                            skillCode: skill.skillCode,\n                            skillName: skill.skillName,\n                        }\n                        this.setState(previousState => ({\n                            skillsCustom: [...previousState.skillsCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteSkillClicked(id, name) {\n        SkillDataService.deleteSkill(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Keahlian berhasil dihapus`})\n                }\n            )\n    }\n\n    updateSkillClicked(id) {\n        console.log(\"Update: \" + id)\n        this.props.history.push(`/skill/${id}`)\n    }\n\n    addSkillClicked() {\n        this.props.history.push('/skill/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'Kode Keahlian',\n                selector: 'skillCode',\n                sortable: true,\n            },\n            {\n                name: 'Nama Keahlian',\n                selector: 'skillName',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-info\" onClick={() => this.updateSkillClicked(row.id)}>Ubah</button>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteSkillClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <br/>\n                    <h5>Daftar Keahlian</h5>\n                    <DataTable\n                        columns={columns}\n                        data={this.state.skillsCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => this.addSkillClicked()}>Tambah Keahlian</button>\n                    </div>\n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListSkillComponent","import React, {Component} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport SkillDataService from '../services/SkillDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass SkillComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            skillCode: '',\n            skillName: ''        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        SkillDataService.retrieveSkill(this.state.id)\n        .then(response => this.setState({\n            skillCode:response.data.skillCode,\n            skillName:response.data.skillName\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.skillCode) {\n            errors.skillCode = 'Kode keahlian tidak boleh kosong'           \n        } else if(values.skillCode.length < 1) {\n            errors.skillCode = 'Panjang kode keahlian tidak boleh kurang dari satu huruf'\n        }\n\n        if(!values.skillName) {\n            errors.skillName = 'Nama keahlian tidak boleh kosong'           \n        } else if(values.skillName.length < 7) {\n            errors.skillName = 'Panjang nama keahlian tidak boleh kurang dari tujuh huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        console.log(\"Here\")\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            SkillDataService.createSkill({\n                skillCode:values.skillCode,\n                skillName:values.skillName,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/skills'))\n        } else {\n            console.log(\"Update\")\n            SkillDataService.updateSkill(this.state.id, {\n                skillCode:values.skillCode,\n                skillName:values.skillName,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/skills'))\n        }\n    }\n\n    render() {\n        let {skillCode, skillName} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Keahlian Baru</h4>\n                <hr/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Formik \n                                initialValues={{skillCode, skillName}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"skillName\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <fieldset className=\"form-group\">\n                                                <label>Kode Keahlian</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Nama Keahlian</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillName\"/>\n                                            </fieldset>\n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>\n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-3\">\n                        </div>\n                    </div>                    \n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default SkillComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/roles`;\n\nclass RoleDataService {\n    retrieveAllRoles(name) {\n        return axios.get(`${SERVICE_API}/list`);\n    }\n    deleteRole(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveRole(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateRole(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createRole(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new RoleDataService();","import React, {Component} from 'react';\nimport RoleDataService from '../services/RoleDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\nimport DataTable from 'react-data-table-component';\n\nclass ListRoleComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roles: [],\n            rolesCustom: [],\n            message:\"\"\n        }\n        this.refreshRoles = this.refreshRoles.bind(this);\n        this.deleteRoleClicked = this.deleteRoleClicked.bind(this);\n        this.updateRoleClicked = this.updateRoleClicked.bind(this);\n        this.addRoleClicked = this.addRoleClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshRoles();\n    }\n\n    refreshRoles() {\n        RoleDataService.retrieveAllRoles(\"name\")\n            .then(response =>\n                response.data.map(\n                    role => {\n                        const item = {\n                            id: role.roleCode,\n                            roleCode: role.roleCode,\n                            roleName: role.roleName,\n                        }\n                        this.setState(previousState => ({\n                            rolesCustom: [...previousState.rolesCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteRoleClicked(id, name) {\n        RoleDataService.deleteRole(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Keahlian berhasil dihapus`})\n                }\n            )\n    }\n\n    updateRoleClicked(id) {\n        console.log(\"Update: \" + id)\n        this.props.history.push(`/role/${id}`)\n    }\n\n    addRoleClicked() {\n        this.props.history.push('/role/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'Kode Jabatan',\n                selector: 'roleCode',\n                sortable: true,\n            },\n            {\n                name: 'Nama Jabatan',\n                selector: 'roleName',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-info\" onClick={() => this.updateRoleClicked(row.id)}>Ubah</button>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteRoleClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                <br/>\n                <h5>Daftar Jabatan</h5>\n                <DataTable\n                        columns={columns}\n                        data={this.state.rolesCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => this.addRoleClicked()}>Tambah Jabatan</button>\n                    </div>\n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListRoleComponent","import React, {Component} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport RoleDataService from '../services/RoleDataService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass RoleComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            roleCode: '',\n            roleName: ''        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        RoleDataService.retrieveRole(this.state.id)\n        .then(response => this.setState({\n            roleCode:response.data.roleCode,\n            roleName:response.data.roleName\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.roleCode) {\n            errors.roleCode = 'Kode jabatan tidak boleh kosong'           \n        } else if(values.roleCode.length < 3) {\n            errors.roleCode = 'Panjang kode jabatan tidak boleh kurang dari tiga huruf'\n        }\n\n        if(!values.roleName) {\n            errors.roleName = 'Nama jabatan tidak boleh kosong'           \n        } else if(values.roleName.length < 5) {\n            errors.roleName = 'Panjang nama jabatan tidak boleh kurang dari lima huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        console.log(\"Here\")\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            RoleDataService.createRole({\n                roleCode:values.roleCode,\n                roleName:values.roleName,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/roles'))\n        } else {\n            console.log(\"Update\")\n            RoleDataService.updateRole(this.state.id, {\n                roleCode:values.roleCode,\n                roleName:values.roleName,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/roles'))\n        }\n    }\n\n    render() {\n        let {roleCode, roleName} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Jabatan Baru</h4>\n                <hr/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Formik \n                                initialValues={{roleCode, roleName}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"roleCode\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"roleName\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <fieldset className=\"form-group\">\n                                                <label>Kode Jabatan</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleCode\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Nama Jabatan</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"roleName\"/>\n                                            </fieldset>\n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>\n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-3\">\n                        </div>\n                    </div>                    \n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default RoleComponent","import axios from 'axios';\n\nconst HOST_API = 'https://workforce-app.herokuapp.com';\nconst SERVICE_API = `${HOST_API}/employeeSkills`;\n\nclass EmployeeDataService {\n    retrieveAllEmployeeSkills(name) {\n        return axios.get(`${SERVICE_API}/list`,);\n    }\n    deleteEmployeeSkill(id) {\n        return axios.delete(`${SERVICE_API}/${id}`);\n    }\n    retrieveEmployeeSkill(id) {\n        return axios.get(`${SERVICE_API}/${id}`);\n    }\n    updateEmployeeSkill(id, todo) {\n        return axios.put(`${SERVICE_API}/${id}`, todo);\n    }\n    createEmployeeSkill(todo) {\n        return axios.post(`${SERVICE_API}`, todo);\n    }\n}\n\nexport default new EmployeeDataService();","import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass ListEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            employeeSkills: [],\n            employeeSkillsCustom: [],\n            message:\"\"\n        }\n        this.refreshEmployeeSkills = this.refreshEmployeeSkills.bind(this);\n        this.deleteEmployeeSkillClicked = this.deleteEmployeeSkillClicked.bind(this);\n        this.updateEmployeeSkillClicked = this.updateEmployeeSkillClicked.bind(this);\n        this.addEmployeeSkillClicked = this.addEmployeeSkillClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshEmployeeSkills();\n    }\n\n    refreshEmployeeSkills() {\n        EmployeeSkillService.retrieveAllEmployeeSkills(\"name\")\n            .then(response =>\n                response.data.map(\n                    employeeSkill => {\n                        const item = {\n                            id: employeeSkill.id,\n                            name: employeeSkill.employeeId,\n                            skill: employeeSkill.skillCode,\n                        }\n                        this.setState(previousState => ({\n                            employeeSkillsCustom: [...previousState.employeeSkillsCustom, item]\n                        }))\n                    }\n                )\n            )\n    }\n\n    deleteEmployeeSkillClicked(id, name) {\n        EmployeeSkillService.deleteEmployeeSkill(id)\n            .then(\n                window.location.reload()                \n            )\n            .then(\n                response => {\n                    this.setState({message: `Keahlian karyawan berhasil dihapus`})\n                }\n            )\n    }\n\n    updateEmployeeSkillClicked(id) {\n        this.props.history.push(`/employeeSkill/${id}`)\n    }\n\n    addEmployeeSkillClicked() {\n        this.props.history.push('/employeeSkill/-1')\n    }\n\n    render() {\n        const columns = [\n            {\n                name: 'Nama',\n                selector: 'name',\n                sortable: true,\n            },\n            {\n                name: 'Keahlian',\n                selector: 'skill',\n                sortable: true,\n                left: true,\n            },\n            {\n                name: 'Ubah',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-info\" onClick={() => this.updateEmployeeSkillClicked(row.id)}>Ubah</button>,\n            },\n            {\n                name: 'Hapus',\n                button: true,\n                cell: row => <button className=\"btn btn-sm btn-danger\" onClick={() => this.deleteEmployeeSkillClicked(row.id)}>Hapus</button>,\n            },\n        ];\n        return(\n            <div>\n                <HeaderComponent/>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <br/>\n                    <h5>Daftar Keahlian Karyawan</h5>\n                    <DataTable\n                        columns={columns}\n                        data={this.state.employeeSkillsCustom}\n                        pagination\n                        paginationPerPage={5}\n                        paginationRowsPerPageOptions={[5]}\n                        highlightOnHover\n                        pointerOnHover\n                    />\n                    <div className=\"row\">\n                        <button className=\"btn btn-info\" onClick={() => this.addEmployeeSkillClicked()}>Add</button>\n                    </div>\n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default ListEmployeeComponent","import React, {Component} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport EmployeeSkillService from '../services/EmployeeSkillService.js';\nimport FooterComponentList from './FooterComponentList.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\n\nclass EmployeeSkillComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            employeeId: '',\n            skillCode: ''        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.state.id === -1) {\n            return\n        }\n\n        EmployeeSkillService.retrieveEmployeeSkill(this.state.id)\n        .then(response => this.setState({\n            employeeId:response.data.employeeId,\n            skillCode:response.data.skillCode\n        }))\n    }\n\n    validate(values) {\n        let errors = {}\n        \n        if(!values.employeeId) {\n            errors.employeeId = 'ID Karyawan tidak boleh kosong'           \n        } else if(values.employeeId.length < 1) {\n            errors.employeeId = 'Panjang ID karyawan tidak boleh kurang dari satu huruf'\n        }\n\n        if(!values.skillCode) {\n            errors.skillCode = 'Kode keahlian tidak boleh kosong'           \n        } else if(values.skillCode.length < 1) {\n            errors.skillCode = 'Panjang kode keahlian tidak boleh kurang dari satu huruf'\n        }\n\n        return errors;\n    }\n\n    onSubmit(values) {\n        console.log(\"Here\")\n        if(this.state.id === '-1') {\n            console.log(\"Create\")\n            EmployeeSkillService.createEmployeeSkill({\n                employeeId:values.employeeId,\n                skillCode:values.skillCode,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/employeeSkills'))\n        } else {\n            console.log(\"Update\")\n            EmployeeSkillService.updateEmployeeSkill(this.state.id, {\n                employeeId:values.employeeId,\n                skillCode:values.skillCode,\n                active:\"Y\"\n            }).then(() => this.props.history.push('/employeeSkills'))\n        }\n    }\n\n    render() {\n        let {employeeId, skillCode} = this.state\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <h4>Form Keahlian Karyawan</h4>\n                <hr/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Formik \n                                initialValues={{employeeId, skillCode}}\n                                onSubmit={this.onSubmit}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                validate={this.validate}\n                                enableReinitialize={true}\n                            >\n                                {\n                                    (props) => (\n                                        <Form>\n                                            <ErrorMessage name=\"employeeId\" component=\"div\" className=\"alert alert-warning\"/>                                            \n                                            <ErrorMessage name=\"skillCode\" component=\"div\" className=\"alert alert-warning\"/>\n                                            <fieldset className=\"form-group\">\n                                                <label>ID Karyawan</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"employeeId\"/>\n                                            </fieldset>\n                                            <fieldset className=\"form-group\">\n                                                <label>Kode Keahlian</label>\n                                                <Field className=\"form-control\" type=\"text\" name=\"skillCode\"/>\n                                            </fieldset>\n                                            <button className=\"btn btn-success\" type=\"submit\">Simpan</button>\n                                        </Form>\n                                    )                        \n                                }\n                            </Formik>\n                        </div>\n                        <div className=\"col-md-3\">\n                        </div>\n                    </div>                    \n                </div>\n                <FooterComponentList/>\n            </div>\n        )\n    }\n}\n\nexport default EmployeeSkillComponent","import React, { Component } from \"react\";\nimport Timeline from 'react-calendar-timeline';\nimport 'react-calendar-timeline/lib/Timeline.css';\nimport moment from 'moment'\nimport FooterComponent from './FooterComponent.jsx';\nimport HeaderComponent from '../views/HeaderComponent.jsx';\nimport AuthenticationService from '../services/AuthenticationService.js';\nimport EmployeeDataService from '../services/EmployeeDataService.js';\nimport OptimizerService from '../services/OptimizerService.js';\nimport Table from 'react-bootstrap/Table';\n\nclass OptimizerComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            apigroup: [],\n            apijob: [],\n            jobs:[],\n            jobCount: [],\n        }\n        this.optimizerClicked = this.optimizerClicked.bind(this);\n        this.refreshActiveEmployees = this.refreshActiveEmployees.bind(this);\n        this.refreshActiveJobs = this.refreshActiveJobs.bind(this);\n        this.refreshJobCount = this.refreshJobCount.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshActiveEmployees();\n        this.refreshActiveJobs(); \n        this.refreshJobCount();       \n    }\n\n    refreshActiveEmployees() {\n        EmployeeDataService.retrieveAllActiveEmployees()\n        .then(\n            response => {\n                this.setState({apigroup: response.data})\n            }\n        )\n    }\n\n    refreshActiveJobs() {\n        OptimizerService.getOptimizer()\n        .then(\n            response => {\n                this.setState({jobs:response.data})\n            }\n        )\n    }\n\n    refreshJobCount() {\n        OptimizerService.getJobCount()\n        .then(\n            response => {\n                this.setState({jobCount:response.data})\n            }\n        )\n    }\n\n    optimizerClicked() {\n        this.state.jobs.map (\n            job => {\n                const item = {\n                    id: job.id,\n                    group: job.group,\n                    title: job.title,\n                    start_time: moment(job.startTime, \"YYYY-MM-DD HH:mm\"),\n                    end_time: moment(job.endTime, \"YYYY-MM-DD HH:mm\")\n                }\n                this.setState(previousState => ({\n                    apijob: [...previousState.apijob, item]\n                }))\n            }\n        )\n        console.log(\"Finish!\");\n    }\n\n    render() {\n        const isAdminLoggedIn = AuthenticationService.isAdminLoggedIn();\n\n        return (\n            <div>\n                <HeaderComponent/>\n                <div className=\"container\">\n                    <h3>Penjadwalan Karyawan</h3>\n                    <hr/>\n                    <Timeline\n                        groups={this.state.apigroup}\n                        items={this.state.apijob}\n                        defaultTimeStart={moment().add(-12, 'hour')}\n                        defaultTimeEnd={moment().add(12, 'hour')}\n                    />\n                    <br/>\n                    {isAdminLoggedIn && <button className=\"btn btn-md btn-success\" onClick={this.optimizerClicked}>\n                        Optimize\n                    </button>}\n                    <Table bordered striped hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>Nama Karyawan</th>\n                                <th>Total Jumlah Pekerjaan</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.jobCount.map (\n                                    jobCount => \n                                    <tr key={jobCount.employeeName}>\n                                        <td>{jobCount.employeeName}</td>\n                                        <td>{jobCount.jobCount}</td>\n                                    </tr>\n                                )\n                            }                        \n                        </tbody>\n                    </Table>                      \n                </div>\n                <FooterComponent/>\n            </div>\n        )\n    }\n}\n\nexport default OptimizerComponent","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport AuthenticatedRoute from '../services/AuthenticatedRoute.jsx';\nimport LoginComponent from '../views/LoginComponent.jsx';\nimport WelcomeComponent from '../views/WelcomeComponent.jsx';\nimport ErrorComponent from '../views/ErrorComponent.jsx';\nimport LogoutComponent from '../views/LogoutComponent.jsx';\nimport ListEmployeeComponent from '../views/ListEmployeeComponent.jsx';\nimport EmployeeComponent from '../views/EmployeeComponent.jsx';\nimport ListJobComponent from '../views/ListJobComponent.jsx';\nimport JobComponent from '../views/JobComponent.jsx';\nimport ListShiftComponent from '../views/ListShiftComponent.jsx';\nimport ShiftComponent from '../views/ShiftComponent.jsx';\nimport ListSkillComponent from '../views/ListSkillComponent.jsx';\nimport SkillComponent from '../views/SkillComponent.jsx';\nimport ListRoleComponent from '../views/ListRoleComponent.jsx';\nimport RoleComponent from '../views/RoleComponent.jsx';\nimport ListEmployeeSkillComponent from '../views/ListEmployeeSkillComponent.jsx';\nimport EmployeeSkillComponent from '../views/EmployeeSkillComponent.jsx';\nimport OptimizerComponent from '../views/OptimizerComponent.jsx';\n\nclass WorkforceApp extends Component {\n    render() {\n        return(\n            <div className=\"TodoApp\">\n                <HashRouter basename=\"/\">\n                    <>\n                        <Switch>\n                            <Route path=\"/\" exact component={LoginComponent}/>\n                            <Route path=\"/login\" component={LoginComponent}/>\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <AuthenticatedRoute path=\"/employees\" component={ListEmployeeComponent}/>\n                            <AuthenticatedRoute path=\"/employee/:id\" component={EmployeeComponent}/>\n                            <AuthenticatedRoute path=\"/employeeSkills\" component={ListEmployeeSkillComponent}/>\n                            <AuthenticatedRoute path=\"/employeeSkill/:id\" component={EmployeeSkillComponent}/>\n                            <AuthenticatedRoute path=\"/jobs\" component={ListJobComponent}/>\n                            <AuthenticatedRoute path=\"/job/:id\" component={JobComponent}/>\n                            <AuthenticatedRoute path=\"/roles\" component={ListRoleComponent}/>\n                            <AuthenticatedRoute path=\"/role/:id\" component={RoleComponent}/>\n                            <AuthenticatedRoute path=\"/shifts\" component={ListShiftComponent}/>\n                            <AuthenticatedRoute path=\"/shift/:id\" component={ShiftComponent}/>\n                            <AuthenticatedRoute path=\"/skills\" component={ListSkillComponent}/>\n                            <AuthenticatedRoute path=\"/skill/:id\" component={SkillComponent}/>\n                            <AuthenticatedRoute path=\"/optimizer\" component={OptimizerComponent}/>\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\n                            <Route path=\"\" component={ErrorComponent}/>\n                        </Switch>                        \n                    </>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default WorkforceApp;","import React from 'react';\nimport WorkforceApp from '../src/components/views/WorkforceApp.jsx';\nimport './App.css';\nimport './bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorkforceApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}